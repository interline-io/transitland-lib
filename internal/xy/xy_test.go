package xy

import (
	"fmt"
	"math"
	"testing"

	"github.com/stretchr/testify/assert"
	geom "github.com/twpayne/go-geom"
	"github.com/twpayne/go-geom/encoding/geojson"
)

func testApproxEqual(t *testing.T, result float64, expect float64) {
	if math.Abs(result-expect) > 1e-6 {
		t.Errorf("got %f, expect %f", result, expect)
	}
}

var testDistancePoints = []struct {
	orig              Point
	dest              Point
	Distance2d        float64
	distanceHaversine float64
}{
	{Point{-122.2772554, 37.8039604}, Point{-122.274464, 37.802963}, 0.0029642403276459884, 269.15621622898107},
	{Point{-122.2767695, 37.7770346}, Point{-122.2768192, 37.7748926}, 0.0021425765073847646, 238.21988351245543},
	{Point{-122.2226131, 37.7839461}, Point{-122.2220745, 37.7853226}, 0.00147812117568097, 160.2113624659609},
	{Point{-122.2173998, 37.7970237}, Point{-122.2163427, 37.8000987}, 0.0032516281168069854, 354.31523902465915},
}

var testLines = []struct {
	Geojson         string
	Length2d        float64
	lengthHaversine float64
}{
	{`{"type":"FeatureCollection","features":[{"type":"Feature","properties":{},"geometry":{"type":"LineString","coordinates":[[-122.50717163085938,37.77722770873696],[-122.45155334472656,37.78156937014928],[-122.39593505859376,37.790794553924414],[-122.32040405273438,37.80544394934271],[-122.26959228515624,37.80761398306056],[-122.26478576660156,37.84124135065978],[-122.22015380859374,37.851543444173984],[-122.19955444335938,37.86618078529668],[-122.17208862304686,37.89219554724437],[-122.07595825195312,37.899239630600185],[-122.05467224121094,37.938782346134424],[-122.03681945800783,38.005902055387054],[-121.97158813476561,38.023754217706944],[-121.8816375732422,38.01726302540855],[-121.81915283203126,37.99832709721297],[-121.75048828124999,37.98858671553364]]}}]}`, 0.886044, 82069.771981},
}

var testPositions = []struct {
	Geojson           string
	Positions         []float64
	FallbackPositions []float64
}{
	{
		Positions: []float64{
			0.009336,
			0.164540,
			0.321070,
			0.378808,
			0.631119,
			0.804450,
			0.996762,
		},
		FallbackPositions: []float64{
			0,
			0.161424,
			0.317310,
			0.376043,
			0.623508,
			0.802542,
			1.0,
		},
		Geojson: `{"type":"FeatureCollection","features":[{"type":"Feature","properties":{},"geometry":{"type":"LineString","coordinates":[[-122.2665023803711,37.87431138542283],[-122.26581573486328,37.853712122567565],[-122.26444244384766,37.83961457275219],[-122.26821899414061,37.82551432799189],[-122.26341247558594,37.819548028632376],[-122.27130889892578,37.803273851858656],[-122.26959228515624,37.80001858607365],[-122.24555969238281,37.788352705583755],[-122.22564697265625,37.77641361883315],[-122.19577789306639,37.75225820732335],[-122.16487884521483,37.72673718477409]]}},{"type":"Feature","properties":{},"geometry":{"type":"Point","coordinates":[-122.27062225341797,37.8724143256462]}},{"type":"Feature","properties":{},"geometry":{"type":"Point","coordinates":[-122.26289749145506,37.84354589127591]}},{"type":"Feature","properties":{},"geometry":{"type":"Point","coordinates":[-122.26427078247069,37.81507298760665]}},{"type":"Feature","properties":{},"geometry":{"type":"Point","coordinates":[-122.27027893066405,37.80544394934271]}},{"type":"Feature","properties":{},"geometry":{"type":"Point","coordinates":[-122.2258186340332,37.77695634643178]}},{"type":"Feature","properties":{},"geometry":{"type":"Point","coordinates":[-122.19697952270508,37.75347973770911]}},{"type":"Feature","properties":{},"geometry":{"type":"Point","coordinates":[-122.16487884521483,37.72782336496339]}}]}`,
	},
}

func decodeGeojson(data string) (*geom.LineString, []*geom.Point, error) {
	fc := geojson.FeatureCollection{}
	err := fc.UnmarshalJSON([]byte(data))
	if err != nil {
		return nil, nil, err
	}
	var line *geom.LineString
	points := []*geom.Point{}
	for _, g := range fc.Features {
		if v, ok := g.Geometry.(*geom.LineString); ok {
			line = v
		}
		if v, ok := g.Geometry.(*geom.Point); ok {
			points = append(points, v)
		}
	}
	return line, points, nil
}

func unflattenCoordinates(stride int, coords []float64) []Point {
	ret := []Point{}
	for i := 0; i < len(coords); i += stride {
		ret = append(ret, Point{coords[i], coords[i+1]})
	}
	return ret
}

func TestDistance2d(t *testing.T) {
	for _, dp := range testDistancePoints {
		d := Distance2d(dp.orig, dp.dest)
		testApproxEqual(t, dp.Distance2d, d)
	}
}

func TestDistanceHaversine(t *testing.T) {
	for _, dp := range testDistancePoints {
		d := DistanceHaversine(dp.orig.Lon, dp.orig.Lat, dp.dest.Lon, dp.dest.Lat)
		testApproxEqual(t, dp.distanceHaversine, d)
	}
}

func TestLineRelativePositions(t *testing.T) {
	for _, dp := range testPositions {
		line, points, err := decodeGeojson(dp.Geojson)
		if err != nil {
			t.Fatal(err)
		}
		lc := unflattenCoordinates(line.Stride(), line.FlatCoords())
		pp := []Point{}
		for _, p := range points {
			pp = append(pp, Point{p.FlatCoords()[0], p.FlatCoords()[1]})
		}
		pos := LineRelativePositions(lc, pp)
		if len(pos) != len(dp.Positions) {
			t.Errorf("expect %d positions, got %d", len(dp.Positions), len(pos))
			continue
		}
		for i := 0; i < len(pos); i++ {
			testApproxEqual(t, pos[i], dp.Positions[i])
		}
	}
}

func TestLineRelativePositionsFallback(t *testing.T) {
	for _, dp := range testPositions {
		_, points, err := decodeGeojson(dp.Geojson)
		if err != nil {
			t.Fatal(err)
		}
		pp := []Point{}
		for _, p := range points {
			pp = append(pp, Point{p.FlatCoords()[0], p.FlatCoords()[1]})
		}
		pos := LineRelativePositionsFallback(pp)
		if len(pos) != len(dp.FallbackPositions) {
			t.Errorf("expect %d positions, got %d", len(dp.FallbackPositions), len(pos))
			continue
		}
		for i := 0; i < len(pos); i++ {
			testApproxEqual(t, pos[i], dp.FallbackPositions[i])
		}
	}
}

func TestLength2d(t *testing.T) {
	for _, line := range testLines {
		l, _, err := decodeGeojson(line.Geojson)
		if err != nil {
			t.Fatal(err)
		}
		coords := unflattenCoordinates(l.Stride(), l.FlatCoords())
		d := Length2d(coords)
		testApproxEqual(t, line.Length2d, d)
	}
}

func TestLengthHaversine(t *testing.T) {
	for _, line := range testLines {
		l, _, err := decodeGeojson(line.Geojson)
		if err != nil {
			t.Fatal(err)
		}
		coords := unflattenCoordinates(l.Stride(), l.FlatCoords())
		d := LengthHaversine(coords)
		testApproxEqual(t, line.lengthHaversine, d)
	}
}

func TestContains(t *testing.T) {
	testcases := []struct {
		name   string
		a      []Point
		b      []Point
		expect bool
	}{
		{
			"basic",
			[]Point{{0, 1}, {0, 2}},
			[]Point{{0, 0}, {0, 1}, {0, 2}, {0, 3}},
			true,
		},
		{
			"one point",
			[]Point{{0, 1}},
			[]Point{{0, 0}, {0, 1}, {0, 2}, {0, 3}},
			true,
		},
		{
			"equal",
			[]Point{{0, 0}, {0, 1}, {0, 2}, {0, 3}},
			[]Point{{0, 0}, {0, 1}, {0, 2}, {0, 3}},
			true,
		},
		{
			"not quite equal",
			[]Point{{0, 0}, {0, 2}, {0, 2}, {0, 3}},
			[]Point{{0, 0}, {0, 1}, {0, 2}, {0, 3}},
			false,
		},
		{
			"longer",
			[]Point{{0, 0}, {0, 1}, {0, 2}, {0, 3}},
			[]Point{{0, 0}, {0, 1}, {0, 2}},
			false,
		},
		{
			"does not contain",
			[]Point{{0, 1}, {0, 4}},
			[]Point{{0, 0}, {0, 1}, {0, 2}, {0, 3}},
			false,
		},
		{
			"false start",
			[]Point{{0, 1}, {0, 2}},
			[]Point{{0, 0}, {0, 1}, {0, 0}, {0, 2}, {0, 3}},
			false,
		},
		{
			"false start 2",
			[]Point{{0, 1}, {0, 2}},
			[]Point{{0, 0}, {0, 1}, {0, 0}, {0, 1}, {0, 2}, {0, 3}},
			true,
		},
	}
	for _, tc := range testcases {
		t.Run(tc.name, func(t *testing.T) {
			if PointSliceContains(tc.a, tc.b) != tc.expect {
				t.Errorf("expected %t", tc.expect)
			}
		})
	}
}

var lineBetweenPositionsData = []struct {
	Geojson   string
	Positions []float64
}{
	{
		Positions: []float64{0, 254.67, 406.49, 520.41, 813.52, 2845.34, 3251.69, 3462.98, 3683.35, 3868.08, 4072.65, 4332.02, 4630.75, 4981.81, 5383.27, 5872.14, 5976.15, 6253.08, 6529.77, 6942.44, 7068.47, 7245.02, 7383.74, 7782.98, 7908.37, 8303.25, 8584.35, 8964.04, 9327.79, 9485.07, 9576.65, 9867.66, 10416.48, 10592.08, 11492.2, 11997.84, 12318.98, 12515.77, 12703.26, 12844.1, 13118.72, 13304.31, 13495.01, 13714.05, 13945.41, 14093.58, 14826.86},
		Geojson:   `{"type":"FeatureCollection","features":[{"type":"Feature","geometry":{"type":"LineString","coordinates":[[-122.277255,37.80396,0],[-122.277028,37.80397,0.01],[-122.276847,37.803978,15.91],[-122.276642,37.803899,35.91],[-122.276437,37.803821,55.91],[-122.276232,37.803743,75.91],[-122.276059,37.803677,92.81],[-122.275857,37.803594,112.81],[-122.275655,37.803512,132.81],[-122.275452,37.803429,152.81],[-122.27525,37.803347,172.81],[-122.275048,37.803264,192.81],[-122.274899,37.803203,207.55],[-122.274729,37.803145,223.82],[-122.274557,37.803027,243.82],[-122.274464,37.802963,254.67],[-122.274244,37.802915,254.68],[-122.274025,37.802868,274.68],[-122.273821,37.802788,294.68],[-122.273617,37.802708,314.68],[-122.273413,37.802628,334.68],[-122.273209,37.802548,354.68],[-122.273005,37.802469,374.68],[-122.272843,37.802342,394.68],[-122.272747,37.802268,406.49],[-122.272741,37.802088,406.5],[-122.272736,37.801962,420.54],[-122.27283,37.801798,440.54],[-122.272852,37.801761,445.1],[-122.272954,37.8016,465.1],[-122.27305,37.801437,485.1],[-122.273199,37.801301,505.1],[-122.273313,37.801197,520.41],[-122.273356,37.80102,520.42],[-122.273386,37.800897,534.39],[-122.273485,37.800735,554.39],[-122.273584,37.800573,574.39],[-122.273683,37.800411,594.39],[-122.273782,37.800249,614.39],[-122.273805,37.800211,619.09],[-122.273904,37.800049,639.09],[-122.274004,37.799887,659.09],[-122.274103,37.799725,679.09],[-122.274202,37.799564,699.09],[-122.27423,37.799518,704.72],[-122.274148,37.799486,712.76],[-122.274054,37.799448,722.04],[-122.27398,37.799417,729.4],[-122.273908,37.799391,736.36],[-122.273749,37.799329,751.94],[-122.273545,37.799249,771.94],[-122.273368,37.799136,791.94],[-122.273191,37.799023,811.94],[-122.273177,37.799014,813.52],[-122.272955,37.798976,813.53],[-122.272774,37.798945,829.76],[-122.27257,37.798865,849.76],[-122.272367,37.798784,869.76],[-122.272164,37.798703,889.76],[-122.27196,37.798623,909.76],[-122.271819,37.798567,923.61],[-122.271924,37.798407,943.61],[-122.272029,37.798248,963.61],[-122.272118,37.798113,980.52],[-122.272233,37.797958,1000.52],[-122.272261,37.797921,1005.29],[-122.272387,37.797834,1019.99],[-122.272503,37.797741,1034.51],[-122.272565,37.797684,1042.87],[-122.272605,37.797644,1048.54],[-122.272689,37.797548,1061.52],[-122.272743,37.79748,1070.45],[-122.2728,37.797403,1080.37],[-122.272887,37.797281,1095.94],[-122.272927,37.797221,1103.48],[-122.273031,37.797061,1123.48],[-122.273129,37.79691,1142.35],[-122.273226,37.796747,1162.35],[-122.273254,37.796699,1168.26],[-122.273306,37.796631,1177.09],[-122.273341,37.796586,1182.96],[-122.273442,37.796425,1202.96],[-122.273542,37.796263,1222.96],[-122.273643,37.796102,1242.96],[-122.273743,37.795941,1262.96],[-122.273768,37.795901,1267.87],[-122.273813,37.795817,1278.01],[-122.273934,37.795665,1298.01],[-122.274055,37.795512,1318.01],[-122.274177,37.79536,1338.01],[-122.274269,37.795244,1353.28],[-122.274379,37.795087,1373.28],[-122.27449,37.794929,1393.28],[-122.2746,37.794772,1413.28],[-122.274711,37.794615,1433.28],[-122.274758,37.794557,1440.94],[-122.274801,37.794516,1446.86],[-122.274902,37.794355,1466.86],[-122.275003,37.794194,1486.86],[-122.275104,37.794032,1506.86],[-122.275199,37.79388,1525.75],[-122.275267,37.793773,1539.06],[-122.275354,37.793607,1559.06],[-122.275442,37.793441,1579.06],[-122.275529,37.793275,1599.06],[-122.275617,37.793109,1619.06],[-122.275704,37.792943,1639.06],[-122.275791,37.792777,1659.06],[-122.275879,37.792611,1679.06],[-122.275966,37.792444,1699.06],[-122.276016,37.79235,1710.43],[-122.276101,37.792183,1730.43],[-122.276187,37.792017,1750.43],[-122.276272,37.79185,1770.43],[-122.276358,37.791683,1790.43],[-122.276443,37.791516,1810.43],[-122.276529,37.79135,1830.43],[-122.276614,37.791183,1850.43],[-122.276699,37.791016,1870.43],[-122.276805,37.790857,1890.43],[-122.276894,37.790723,1907.26],[-122.276977,37.790556,1927.26],[-122.277061,37.790388,1947.26],[-122.277144,37.790221,1967.26],[-122.277192,37.790124,1978.83],[-122.277296,37.789964,1998.83],[-122.277337,37.7899,2006.81],[-122.277419,37.789732,2026.81],[-122.277501,37.789564,2046.81],[-122.277583,37.789397,2066.81],[-122.277665,37.789229,2086.81],[-122.277747,37.789061,2106.81],[-122.277829,37.788893,2126.81],[-122.277911,37.788725,2146.81],[-122.277968,37.788608,2160.8],[-122.278002,37.788553,2167.61],[-122.27805,37.788462,2178.57],[-122.278128,37.788293,2198.57],[-122.278193,37.788151,2215.36],[-122.278239,37.788054,2226.88],[-122.278297,37.787911,2243.58],[-122.278349,37.787761,2260.87],[-122.278389,37.787624,2276.5],[-122.278414,37.787517,2288.6],[-122.278428,37.787403,2301.34],[-122.278439,37.787281,2314.94],[-122.278443,37.787167,2327.62],[-122.278445,37.787048,2340.85],[-122.278439,37.786933,2353.65],[-122.278428,37.786814,2366.92],[-122.278403,37.78668,2381.98],[-122.27836,37.786521,2400.06],[-122.278327,37.786411,2412.63],[-122.278294,37.786314,2423.8],[-122.278256,37.786219,2434.88],[-122.278217,37.786131,2445.25],[-122.278172,37.786038,2456.32],[-122.278107,37.785942,2468.43],[-122.278,37.785783,2488.43],[-122.27797,37.785739,2494.01],[-122.277854,37.785584,2514.01],[-122.277753,37.785449,2531.47],[-122.27763,37.785298,2551.47],[-122.277507,37.785147,2571.47],[-122.277432,37.785055,2583.58],[-122.277319,37.784915,2602.04],[-122.277212,37.784776,2620.13],[-122.277129,37.784665,2634.47],[-122.277079,37.784583,2644.59],[-122.277042,37.784525,2651.81],[-122.27697,37.784408,2666.28],[-122.27691,37.784301,2679.29],[-122.276874,37.784225,2688.31],[-122.276844,37.784159,2696.11],[-122.276803,37.784063,2707.38],[-122.276772,37.783988,2716.15],[-122.276746,37.783917,2724.37],[-122.276716,37.783821,2735.37],[-122.276695,37.783734,2745.22],[-122.276662,37.7836,2760.4],[-122.27665,37.783523,2769.03],[-122.27664,37.783454,2776.75],[-122.276634,37.783411,2781.56],[-122.276627,37.783354,2787.93],[-122.276618,37.783174,2807.93],[-122.276699,37.783006,2827.93],[-122.27677,37.78286,2845.34],[-122.27668,37.782695,2845.35],[-122.27661,37.782566,2860.94],[-122.276607,37.782386,2880.94],[-122.276603,37.782206,2900.94],[-122.2766,37.782026,2920.94],[-122.276598,37.78192,2932.78],[-122.27659,37.78174,2952.78],[-122.276584,37.781609,2967.38],[-122.276577,37.781429,2987.38],[-122.276571,37.781249,3007.38],[-122.276567,37.781142,3019.33],[-122.276568,37.780962,3039.33],[-122.27657,37.780782,3059.33],[-122.276571,37.780602,3079.33],[-122.276573,37.780423,3099.33],[-122.276573,37.780359,3106.4],[-122.276577,37.780237,3119.97],[-122.276584,37.780057,3139.97],[-122.276589,37.779944,3152.57],[-122.276596,37.779815,3166.93],[-122.2766,37.7797,3179.72],[-122.276602,37.779593,3191.62],[-122.2766,37.779502,3201.74],[-122.276546,37.779412,3212.82],[-122.276621,37.779242,3232.82],[-122.276692,37.779082,3251.69],[-122.276637,37.778907,3251.7],[-122.276582,37.778733,3271.7],[-122.276584,37.778565,3290.37],[-122.276591,37.778385,3310.37],[-122.276599,37.778205,3330.37],[-122.276605,37.778026,3350.37],[-122.276607,37.777963,3357.34],[-122.276613,37.777783,3377.34],[-122.276616,37.777703,3386.26],[-122.276622,37.777523,3406.26],[-122.276623,37.77748,3411.06],[-122.27663,37.7773,3431.06],[-122.276717,37.777134,3451.06],[-122.276769,37.777035,3462.98],[-122.276717,37.77686,3462.99],[-122.276665,37.776685,3482.99],[-122.27667,37.776505,3502.99],[-122.276678,37.776325,3522.99],[-122.276682,37.776248,3531.59],[-122.276689,37.776068,3551.59],[-122.276697,37.775888,3571.59],[-122.276704,37.775709,3591.59],[-122.276711,37.775529,3611.59],[-122.276718,37.775349,3631.59],[-122.276725,37.775186,3649.74],[-122.276781,37.775012,3669.74],[-122.276819,37.774893,3683.35],[-122.276784,37.774715,3683.36],[-122.276748,37.774538,3703.36],[-122.276753,37.774358,3723.36],[-122.276757,37.774232,3737.35],[-122.276765,37.774052,3757.35],[-122.276772,37.773872,3777.35],[-122.27678,37.773693,3797.35],[-122.276788,37.773513,3817.35],[-122.276796,37.773333,3837.35],[-122.276857,37.77316,3857.35],[-122.27689,37.773067,3868.08],[-122.276856,37.772889,3868.09],[-122.276821,37.772711,3888.09],[-122.276826,37.772532,3908.09],[-122.276832,37.772378,3925.18],[-122.276839,37.772198,3945.18],[-122.276845,37.772018,3965.18],[-122.276852,37.771839,3985.18],[-122.276859,37.771659,4005.18],[-122.276865,37.771479,4025.18],[-122.276867,37.771432,4030.42],[-122.276644,37.771395,4050.42],[-122.276422,37.771357,4070.42],[-122.276397,37.771353,4072.65],[-122.276173,37.771382,4072.66],[-122.275948,37.771412,4092.66],[-122.275862,37.771411,4100.23],[-122.275635,37.771405,4120.23],[-122.275407,37.771399,4140.23],[-122.27518,37.771393,4160.23],[-122.275063,37.77139,4170.5],[-122.274836,37.771382,4190.5],[-122.274608,37.771375,4210.5],[-122.274381,37.771367,4230.5],[-122.274154,37.771359,4250.5],[-122.273926,37.771351,4270.5],[-122.273699,37.771344,4290.5],[-122.273482,37.771291,4310.5],[-122.273264,37.771237,4330.5],[-122.273248,37.771233,4332.02],[-122.273026,37.771273,4332.03],[-122.272804,37.771313,4352.03],[-122.272811,37.771133,4372.03],[-122.272821,37.770953,4392.03],[-122.27283,37.770773,4412.03],[-122.27284,37.770594,4432.03],[-122.272849,37.770414,4452.03],[-122.272853,37.770343,4459.93],[-122.272859,37.770163,4479.93],[-122.272866,37.769983,4499.93],[-122.272872,37.769804,4519.93],[-122.272884,37.769624,4539.93],[-122.272895,37.769444,4559.93],[-122.272907,37.769265,4579.93],[-122.272916,37.769101,4598.15],[-122.272963,37.768925,4618.15],[-122.272992,37.768814,4630.75],[-122.272865,37.768665,4630.76],[-122.272773,37.768556,4645.31],[-122.272692,37.768424,4661.62],[-122.272615,37.768322,4674.83],[-122.272502,37.768199,4691.73],[-122.272356,37.768061,4711.73],[-122.272209,37.767924,4731.73],[-122.272148,37.767866,4740.1],[-122.272007,37.767725,4760.1],[-122.271924,37.767641,4771.94],[-122.271842,37.767538,4785.47],[-122.271795,37.767466,4794.48],[-122.271759,37.767402,4802.27],[-122.271688,37.767254,4819.87],[-122.271631,37.767104,4837.29],[-122.271601,37.767007,4848.39],[-122.271584,37.766902,4860.16],[-122.27157,37.766799,4871.68],[-122.271562,37.766703,4882.38],[-122.271554,37.766523,4902.38],[-122.271546,37.766343,4922.38],[-122.271537,37.766164,4942.38],[-122.271317,37.766117,4962.38],[-122.271104,37.766071,4981.81],[-122.270881,37.766106,4981.82],[-122.270676,37.766138,5000.17],[-122.270514,37.766114,5014.66],[-122.270325,37.766073,5031.89],[-122.270182,37.766034,5045.19],[-122.269994,37.765971,5063.14],[-122.269788,37.765894,5083.14],[-122.269583,37.765816,5103.14],[-122.269377,37.76574,5123.14],[-122.269171,37.765663,5143.14],[-122.268966,37.765586,5163.14],[-122.26876,37.76551,5183.14],[-122.268554,37.765433,5203.14],[-122.268373,37.765366,5220.71],[-122.268167,37.765289,5240.71],[-122.267961,37.765213,5260.71],[-122.267756,37.765136,5280.71],[-122.26755,37.765059,5300.71],[-122.267344,37.764982,5320.71],[-122.267185,37.764923,5336.17],[-122.267005,37.764813,5356.17],[-122.266825,37.764703,5376.17],[-122.266761,37.764664,5383.27],[-122.266538,37.76463,5383.28],[-122.266314,37.764596,5403.28],[-122.266107,37.764522,5423.28],[-122.26595,37.764464,5438.5],[-122.265744,37.764388,5458.5],[-122.265537,37.764312,5478.5],[-122.265477,37.76429,5484.36],[-122.265279,37.764217,5503.56],[-122.265073,37.76414,5523.56],[-122.264868,37.764063,5543.56],[-122.264708,37.764004,5559.06],[-122.264502,37.763928,5579.06],[-122.264296,37.763852,5599.06],[-122.264089,37.763776,5619.06],[-122.263883,37.7637,5639.06],[-122.263677,37.763624,5659.06],[-122.263471,37.763547,5679.06],[-122.263265,37.763471,5699.06],[-122.263215,37.763453,5703.9],[-122.26301,37.763375,5723.9],[-122.262868,37.76332,5737.8],[-122.262674,37.763247,5756.69],[-122.262468,37.76317,5776.69],[-122.262263,37.763092,5796.69],[-122.262058,37.763015,5816.69],[-122.26214,37.762847,5836.69],[-122.262297,37.762717,5856.69],[-122.262419,37.762617,5872.14],[-122.262445,37.762438,5872.15],[-122.262471,37.76226,5892.15],[-122.262562,37.762095,5912.15],[-122.262657,37.761931,5932.15],[-122.262807,37.761796,5952.15],[-122.262957,37.761661,5972.15],[-122.262987,37.761634,5976.15],[-122.263018,37.761456,5976.16],[-122.26305,37.761278,5996.16],[-122.26314,37.761113,6016.16],[-122.263237,37.76095,6036.16],[-122.263333,37.760787,6056.16],[-122.26343,37.760624,6076.16],[-122.263526,37.760461,6096.16],[-122.263622,37.760298,6116.16],[-122.263718,37.760135,6136.16],[-122.263814,37.759972,6156.16],[-122.26391,37.759809,6176.16],[-122.264006,37.759646,6196.16],[-122.264102,37.759483,6216.16],[-122.263921,37.759373,6236.16],[-122.263768,37.759281,6253.08],[-122.263549,37.759232,6253.09],[-122.26333,37.759184,6273.09],[-122.263124,37.759108,6293.09],[-122.262918,37.759031,6313.09],[-122.262712,37.758954,6333.09],[-122.262519,37.758883,6351.83],[-122.262313,37.758806,6371.83],[-122.262108,37.758729,6391.83],[-122.261902,37.758653,6411.83],[-122.261696,37.758576,6431.83],[-122.26149,37.758499,6451.83],[-122.261285,37.758422,6471.83],[-122.261079,37.758345,6491.83],[-122.260892,37.758242,6511.83],[-122.260725,37.75815,6529.77],[-122.260506,37.758101,6529.78],[-122.260287,37.758052,6549.78],[-122.26008,37.757977,6569.78],[-122.259874,37.757901,6589.78],[-122.259668,37.757825,6609.78],[-122.25957,37.757789,6619.29],[-122.259364,37.757712,6639.29],[-122.259158,37.757636,6659.29],[-122.258953,37.757559,6679.29],[-122.258747,37.757483,6699.29],[-122.258541,37.757406,6719.29],[-122.258335,37.757329,6739.29],[-122.258129,37.757253,6759.29],[-122.257923,37.757176,6779.29],[-122.257718,37.757099,6799.29],[-122.257512,37.757023,6819.29],[-122.257306,37.756946,6839.29],[-122.2571,37.75687,6859.29],[-122.256894,37.756793,6879.29],[-122.256725,37.75673,6895.73],[-122.256594,37.756877,6915.73],[-122.256464,37.757025,6935.73],[-122.25642,37.757074,6942.44],[-122.256367,37.757249,6942.45],[-122.256314,37.757424,6962.45],[-122.25622,37.757588,6982.45],[-122.256124,37.757751,7002.45],[-122.256028,37.757914,7022.45],[-122.255907,37.758066,7042.45],[-122.255785,37.758218,7062.45],[-122.255749,37.758264,7068.47],[-122.255698,37.758439,7068.48],[-122.255647,37.758615,7088.48],[-122.25556,37.758781,7108.48],[-122.255472,37.758947,7128.48],[-122.255385,37.759113,7148.48],[-122.255297,37.759279,7168.48],[-122.255209,37.759445,7188.48],[-122.255127,37.7596,7207.2],[-122.254939,37.759499,7227.2],[-122.254771,37.759409,7245.02],[-122.254553,37.759357,7245.03],[-122.254335,37.759305,7265.03],[-122.254131,37.759226,7285.03],[-122.253927,37.759146,7305.03],[-122.253723,37.759067,7325.03],[-122.253519,37.758987,7345.03],[-122.253353,37.758864,7365.03],[-122.253198,37.758749,7383.74],[-122.252982,37.758692,7383.75],[-122.252766,37.758635,7403.75],[-122.252581,37.758531,7423.75],[-122.252516,37.758493,7430.84],[-122.252326,37.758394,7450.84],[-122.252137,37.758294,7470.84],[-122.251947,37.758195,7490.84],[-122.251758,37.758095,7510.84],[-122.251614,37.75802,7525.99],[-122.251421,37.757925,7545.99],[-122.251228,37.75783,7565.99],[-122.251162,37.757798,7572.77],[-122.251076,37.757785,7580.47],[-122.251025,37.757767,7585.38],[-122.250916,37.75771,7596.87],[-122.250749,37.75762,7614.64],[-122.250629,37.757557,7627.3],[-122.250558,37.757521,7634.72],[-122.250488,37.757476,7642.65],[-122.250428,37.757449,7648.72],[-122.250368,37.757425,7654.63],[-122.250323,37.757405,7659.17],[-122.25027,37.757386,7664.29],[-122.250227,37.757364,7668.79],[-122.250126,37.75732,7678.93],[-122.250061,37.757293,7685.38],[-122.249995,37.757264,7692.02],[-122.249929,37.757233,7698.77],[-122.249797,37.757164,7712.68],[-122.249734,37.75713,7719.39],[-122.249588,37.757052,7734.88],[-122.249543,37.757028,7739.65],[-122.249369,37.756913,7759.65],[-122.249194,37.756797,7779.65],[-122.249165,37.756778,7782.98],[-122.248991,37.756894,7782.99],[-122.248899,37.756956,7793.63],[-122.248841,37.757053,7805.56],[-122.248786,37.757131,7815.49],[-122.248694,37.757253,7831.28],[-122.248613,37.757347,7843.93],[-122.248517,37.757457,7858.79],[-122.248421,37.75755,7872.14],[-122.248262,37.757679,7892.14],[-122.248133,37.757783,7908.37],[-122.248041,37.757947,7928.37],[-122.247988,37.758042,7939.86],[-122.247864,37.758193,7959.86],[-122.24774,37.758344,7979.86],[-122.247616,37.758494,7999.86],[-122.247489,37.758644,8019.86],[-122.247363,37.758793,8039.86],[-122.247237,37.758943,8059.86],[-122.24711,37.759092,8079.86],[-122.246984,37.759242,8099.86],[-122.246857,37.759392,8119.86],[-122.246819,37.759437,8125.93],[-122.246694,37.759587,8145.93],[-122.246569,37.759738,8165.93],[-122.246444,37.759888,8185.93],[-122.246319,37.760038,8205.93],[-122.246192,37.760187,8225.93],[-122.246053,37.760322,8245.26],[-122.245914,37.760457,8264.59],[-122.245775,37.760591,8283.92],[-122.245636,37.760726,8303.25],[-122.245698,37.76076,8309.88],[-122.245586,37.76089,8327.37],[-122.24546,37.76104,8347.39],[-122.245334,37.76119,8367.41],[-122.245209,37.76134,8387.38],[-122.245083,37.76149,8407.4],[-122.244957,37.761639,8427.33],[-122.244897,37.761711,8436.92],[-122.244774,37.761862,8456.89],[-122.244651,37.762014,8476.95],[-122.244529,37.762165,8496.87],[-122.244406,37.762317,8516.93],[-122.244283,37.762468,8536.9],[-122.244222,37.762543,8546.81],[-122.244092,37.76269,8566.75],[-122.244016,37.762776,8578.42],[-122.243978,37.76282,8584.34],[-122.24393,37.762793,8584.35],[-122.243978,37.76282,8589.53],[-122.243868,37.762944,8606.37],[-122.243744,37.763095,8626.39],[-122.243621,37.763246,8646.36],[-122.243518,37.763371,8662.95],[-122.243392,37.763521,8682.97],[-122.243266,37.763671,8702.99],[-122.243141,37.763821,8722.96],[-122.243015,37.76397,8742.89],[-122.242889,37.76412,8762.91],[-122.242827,37.764194,8772.78],[-122.242701,37.764344,8792.8],[-122.242575,37.764493,8812.73],[-122.242448,37.764643,8832.8],[-122.24239,37.764712,8842.01],[-122.242265,37.764862,8861.98],[-122.242141,37.765013,8882],[-122.242016,37.765163,8901.97],[-122.241891,37.765314,8922.04],[-122.241763,37.765462,8941.98],[-122.241635,37.765611,8962.01],[-122.241622,37.765626,8964.03],[-122.241575,37.765601,8964.04],[-122.241465,37.76575,8983.24],[-122.241356,37.7659,9002.44],[-122.241246,37.766049,9021.64],[-122.241136,37.766198,9040.84],[-122.24101,37.766348,9060.86],[-122.240884,37.766498,9080.86],[-122.240814,37.766581,9091.99],[-122.240747,37.766666,9103.13],[-122.240621,37.766816,9123.13],[-122.240495,37.766966,9143.13],[-122.24037,37.767116,9163.13],[-122.240244,37.767265,9183.13],[-122.240117,37.767415,9203.13],[-122.239991,37.767565,9223.13],[-122.239865,37.767714,9243.13],[-122.239739,37.767864,9263.13],[-122.239613,37.768014,9283.13],[-122.239528,37.768114,9296.54],[-122.239364,37.768239,9316.54],[-122.239272,37.768309,9327.79],[-122.239179,37.768473,9327.8],[-122.239087,37.768637,9347.8],[-122.238962,37.768788,9367.8],[-122.238836,37.768938,9387.8],[-122.23871,37.769087,9407.8],[-122.238583,37.769237,9427.8],[-122.238457,37.769387,9447.8],[-122.238302,37.769518,9467.8],[-122.238167,37.769631,9485.07],[-122.238079,37.769797,9485.08],[-122.238021,37.769907,9498.34],[-122.237896,37.770058,9518.34],[-122.237771,37.770208,9538.34],[-122.237613,37.770337,9558.34],[-122.237469,37.770456,9576.65],[-122.237387,37.770624,9576.66],[-122.237333,37.770735,9589.91],[-122.237206,37.770884,9609.91],[-122.237078,37.771033,9629.91],[-122.236951,37.771182,9649.91],[-122.236823,37.771331,9669.91],[-122.236756,37.77141,9680.5],[-122.236626,37.771558,9700.5],[-122.236538,37.771658,9714.08],[-122.236415,37.771809,9734.08],[-122.236304,37.771945,9752.05],[-122.236204,37.772057,9767.29],[-122.236053,37.772191,9787.29],[-122.235918,37.772311,9805.1],[-122.235769,37.772447,9825.1],[-122.235588,37.772556,9845.1],[-122.235407,37.772665,9865.1],[-122.235384,37.772679,9867.66],[-122.235276,37.772837,9867.67],[-122.235189,37.772964,9883.7],[-122.235051,37.773107,9903.7],[-122.234913,37.77325,9923.7],[-122.234805,37.773362,9939.36],[-122.234811,37.773424,9946.27],[-122.234803,37.773478,9952.32],[-122.234764,37.77357,9963.11],[-122.234732,37.773633,9970.66],[-122.234679,37.773705,9979.92],[-122.234543,37.773849,9999.92],[-122.234408,37.773994,10019.92],[-122.234269,37.774137,10039.92],[-122.234131,37.774279,10059.92],[-122.233993,37.774422,10079.92],[-122.233854,37.774565,10099.92],[-122.233716,37.774708,10119.92],[-122.233641,37.774785,10130.74],[-122.233504,37.774929,10150.74],[-122.233468,37.774966,10155.96],[-122.233336,37.775101,10174.93],[-122.233221,37.775219,10191.49],[-122.233148,37.775296,10202.19],[-122.233014,37.775442,10222.19],[-122.232881,37.775587,10242.19],[-122.232844,37.775627,10247.67],[-122.232737,37.775721,10261.73],[-122.232666,37.775738,10268.25],[-122.232531,37.775883,10288.25],[-122.232467,37.775946,10297.25],[-122.232402,37.775995,10305.14],[-122.232229,37.776112,10325.14],[-122.232137,37.776179,10336.15],[-122.232073,37.776239,10344.88],[-122.23191,37.776364,10364.88],[-122.231762,37.776492,10384.12],[-122.231601,37.776619,10404.12],[-122.231502,37.776698,10416.48],[-122.231401,37.776859,10416.49],[-122.2313,37.777021,10436.49],[-122.231167,37.777166,10456.49],[-122.23103,37.77731,10476.49],[-122.230927,37.777417,10491.45],[-122.230787,37.777559,10511.45],[-122.230656,37.777691,10530.12],[-122.230518,37.777834,10550.12],[-122.23048,37.777873,10555.59],[-122.230253,37.777878,10575.59],[-122.230065,37.777883,10592.08],[-122.229861,37.777804,10592.09],[-122.229656,37.777725,10612.13],[-122.229466,37.777626,10632.13],[-122.229276,37.777527,10652.13],[-122.229217,37.777496,10658.36],[-122.229025,37.7774,10678.33],[-122.22884,37.777295,10698.35],[-122.228654,37.777191,10718.37],[-122.228469,37.777086,10738.39],[-122.228383,37.777038,10747.64],[-122.2282,37.776931,10767.65],[-122.228018,37.776823,10787.65],[-122.227976,37.776799,10792.2],[-122.22779,37.776695,10812.22],[-122.227746,37.77667,10816.98],[-122.227664,37.776624,10825.82],[-122.227515,37.776488,10845.82],[-122.227468,37.776445,10852.14],[-122.227295,37.776328,10872.15],[-122.227122,37.776212,10892.09],[-122.22703,37.77615,10902.72],[-122.226846,37.776045,10922.67],[-122.226701,37.775962,10938.4],[-122.226783,37.775794,10958.42],[-122.226848,37.775654,10975],[-122.226925,37.775485,10994.97],[-122.227,37.775321,11014.36],[-122.226837,37.775258,11030.31],[-122.226712,37.775204,11042.83],[-122.226593,37.775144,11055.24],[-122.226437,37.775073,11071.06],[-122.226257,37.774983,11089.78],[-122.226117,37.774917,11104.11],[-122.225923,37.774823,11124.11],[-122.225729,37.774729,11144.11],[-122.225535,37.774635,11164.11],[-122.225341,37.774541,11184.11],[-122.225184,37.774465,11200.29],[-122.22499,37.774371,11220.29],[-122.224795,37.774278,11240.31],[-122.224601,37.774184,11260.31],[-122.224407,37.774091,11280.25],[-122.224275,37.774027,11293.86],[-122.224154,37.774179,11313.83],[-122.224033,37.774332,11333.89],[-122.223992,37.774384,11340.7],[-122.223948,37.77444,11348.03],[-122.224128,37.77455,11368.03],[-122.224308,37.77466,11388.03],[-122.224437,37.774738,11402.3],[-122.224607,37.774858,11422.33],[-122.224673,37.774904,11430.06],[-122.224795,37.775028,11447.53],[-122.224884,37.775099,11458.64],[-122.224999,37.77522,11475.42],[-122.225114,37.77534,11492.2],[-122.225286,37.775416,11509.49],[-122.225457,37.775492,11526.78],[-122.225688,37.775519,11547.27],[-122.225753,37.775423,11559.37],[-122.225818,37.775327,11571.47],[-122.225883,37.775231,11583.57],[-122.225948,37.775135,11595.67],[-122.226069,37.774997,11614.32],[-122.226213,37.775057,11628.64],[-122.226357,37.775117,11642.96],[-122.226501,37.775177,11657.28],[-122.226646,37.775237,11671.6],[-122.22675,37.775325,11685.06],[-122.226855,37.775414,11698.52],[-122.226812,37.775532,11712.22],[-122.226769,37.775651,11725.92],[-122.226726,37.775769,11739.62],[-122.226683,37.775888,11753.32],[-122.226626,37.776004,11767.25],[-122.226568,37.776121,11781.18],[-122.226511,37.776238,11795.11],[-122.226453,37.776355,11809.04],[-122.226396,37.776471,11822.97],[-122.226338,37.776588,11836.9],[-122.226281,37.776705,11850.83],[-122.226223,37.776822,11864.76],[-122.226166,37.776938,11878.69],[-122.226108,37.777055,11892.62],[-122.226051,37.777172,11906.55],[-122.225993,37.777289,11920.48],[-122.225936,37.777405,11934.41],[-122.225878,37.777522,11948.34],[-122.225821,37.777639,11962.27],[-122.225763,37.777756,11976.2],[-122.225682,37.777829,11987.02],[-122.225601,37.777902,11997.84],[-122.225549,37.778032,12012.97],[-122.225497,37.778161,12028.1],[-122.225445,37.778291,12043.23],[-122.225392,37.778421,12058.36],[-122.22534,37.778551,12073.49],[-122.225288,37.77868,12088.62],[-122.225236,37.77881,12103.75],[-122.225184,37.77894,12118.88],[-122.225116,37.779074,12134.99],[-122.225048,37.779209,12151.1],[-122.22498,37.779343,12167.21],[-122.224911,37.779478,12183.32],[-122.224843,37.779612,12199.43],[-122.224775,37.779747,12215.54],[-122.224707,37.779882,12231.65],[-122.224639,37.780016,12247.76],[-122.224592,37.780115,12259.51],[-122.224545,37.780214,12271.26],[-122.224498,37.780313,12283.01],[-122.224451,37.780412,12294.76],[-122.224362,37.780494,12306.87],[-122.224272,37.780577,12318.98],[-122.224223,37.780718,12335.24],[-122.224174,37.780859,12351.5],[-122.224125,37.781,12367.76],[-122.224076,37.781141,12384.02],[-122.223994,37.781309,12404.04],[-122.223941,37.781416,12416.84],[-122.223857,37.781583,12436.84],[-122.223774,37.781751,12456.84],[-122.22369,37.781918,12476.84],[-122.223565,37.782068,12496.84],[-122.223446,37.78221,12515.77],[-122.223405,37.782387,12515.78],[-122.223364,37.782564,12535.78],[-122.223281,37.782731,12555.78],[-122.223229,37.782836,12568.28],[-122.223144,37.783003,12588.28],[-122.22306,37.78317,12608.28],[-122.222975,37.783337,12628.28],[-122.222891,37.783504,12648.28],[-122.222806,37.783671,12668.28],[-122.222696,37.783828,12688.28],[-122.222613,37.783946,12703.26],[-122.222574,37.784123,12703.27],[-122.222534,37.7843,12723.27],[-122.222466,37.784472,12743.27],[-122.222398,37.784644,12763.27],[-122.222329,37.784815,12783.27],[-122.222278,37.784943,12798.2],[-122.222189,37.785109,12818.2],[-122.2221,37.785274,12838.2],[-122.222074,37.785323,12844.1],[-122.222035,37.7855,12844.11],[-122.222009,37.785619,12857.52],[-122.22194,37.78579,12877.52],[-122.22187,37.785962,12897.52],[-122.221801,37.786133,12917.52],[-122.221732,37.786304,12937.52],[-122.221663,37.786476,12957.52],[-122.221594,37.786647,12977.52],[-122.221525,37.786818,12997.52],[-122.221462,37.786991,13017.52],[-122.221393,37.787163,13037.52],[-122.221324,37.787334,13057.52],[-122.221255,37.787506,13077.52],[-122.221157,37.787668,13097.52],[-122.221059,37.78783,13117.52],[-122.221053,37.78784,13118.72],[-122.221016,37.788018,13118.73],[-122.22098,37.788195,13138.73],[-122.220911,37.788367,13158.73],[-122.220894,37.788411,13163.9],[-122.22083,37.788584,13183.9],[-122.220761,37.788755,13203.9],[-122.220691,37.788926,13223.9],[-122.220622,37.789098,13243.9],[-122.220553,37.789269,13263.9],[-122.220535,37.789313,13269.05],[-122.220435,37.789475,13289.05],[-122.220359,37.789598,13304.31],[-122.220329,37.789776,13304.32],[-122.220313,37.789867,13314.5],[-122.220247,37.790039,13334.5],[-122.220181,37.790211,13354.5],[-122.220152,37.790287,13363.3],[-122.220086,37.790459,13383.3],[-122.220058,37.790533,13391.87],[-122.219988,37.790704,13411.87],[-122.219917,37.790875,13431.87],[-122.219847,37.791046,13451.87],[-122.219747,37.791208,13471.87],[-122.219648,37.79137,13491.87],[-122.219632,37.791395,13495.01],[-122.219598,37.791573,13495.02],[-122.219564,37.791751,13515.02],[-122.219503,37.791901,13532.57],[-122.219435,37.792073,13552.57],[-122.219367,37.792244,13572.57],[-122.219299,37.792416,13592.57],[-122.21923,37.792587,13612.57],[-122.219162,37.792759,13632.57],[-122.219094,37.792931,13652.57],[-122.21905,37.793042,13665.54],[-122.218956,37.793206,13685.54],[-122.218861,37.793369,13705.54],[-122.218821,37.793439,13714.05],[-122.218785,37.793617,13714.06],[-122.218749,37.793794,13734.06],[-122.218702,37.793918,13748.43],[-122.218634,37.79409,13768.43],[-122.218566,37.794261,13788.43],[-122.218499,37.794433,13808.43],[-122.21848,37.79448,13813.9],[-122.218411,37.794651,13833.9],[-122.218342,37.794823,13853.9],[-122.218283,37.794968,13870.86],[-122.218215,37.79514,13890.86],[-122.218148,37.795311,13910.86],[-122.218045,37.795472,13930.86],[-122.217971,37.795589,13945.41],[-122.217938,37.795767,13945.42],[-122.217914,37.795893,13959.59],[-122.217848,37.796065,13979.59],[-122.217796,37.7962,13995.27],[-122.217728,37.796372,14015.27],[-122.217676,37.796502,14030.47],[-122.217605,37.796673,14050.47],[-122.217561,37.796778,14062.78],[-122.217456,37.796938,14082.78],[-122.2174,37.797024,14093.58],[-122.217359,37.797201,14093.59],[-122.217318,37.797378,14113.59],[-122.217306,37.797428,14119.27],[-122.217248,37.79747,14126.18],[-122.21721,37.797584,14139.29],[-122.217183,37.797657,14147.75],[-122.217117,37.797829,14167.75],[-122.217078,37.797924,14178.84],[-122.217002,37.797905,14185.84],[-122.216784,37.797853,14205.84],[-122.216566,37.797801,14225.84],[-122.216415,37.797765,14239.71],[-122.216198,37.797711,14259.71],[-122.215981,37.797656,14279.71],[-122.215764,37.797602,14299.71],[-122.2157,37.797586,14305.61],[-122.215629,37.797757,14325.61],[-122.215593,37.797843,14335.69],[-122.215525,37.798015,14355.69],[-122.215454,37.798185,14375.69],[-122.215411,37.798288,14387.69],[-122.215344,37.79846,14407.69],[-122.215277,37.798632,14427.69],[-122.21521,37.798804,14447.69],[-122.215143,37.798976,14467.69],[-122.215046,37.799112,14485.09],[-122.214927,37.799218,14500.85],[-122.21474,37.79932,14520.85],[-122.214678,37.799354,14527.45],[-122.214498,37.799464,14547.45],[-122.214429,37.799507,14555.16],[-122.214314,37.79959,14568.84],[-122.214221,37.799668,14580.76],[-122.214143,37.799744,14591.64],[-122.214067,37.799821,14602.5],[-122.214283,37.799878,14622.5],[-122.214491,37.799933,14641.78],[-122.214708,37.799987,14661.78],[-122.214925,37.800042,14681.78],[-122.215031,37.800068,14691.54],[-122.215248,37.800121,14711.54],[-122.215466,37.800175,14731.54],[-122.215614,37.800211,14745.17],[-122.21583,37.800268,14765.17],[-122.216046,37.800325,14785.17],[-122.216139,37.800349,14793.78],[-122.216262,37.800198,14813.78],[-122.216343,37.800099,14826.86]]},"properties":null},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.277255,37.80396]},"properties":{"stop_id":"58900"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.274464,37.802963]},"properties":{"stop_id":"59444"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.272747,37.802268]},"properties":{"stop_id":"54777"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.273313,37.801197]},"properties":{"stop_id":"51536"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.273177,37.799014]},"properties":{"stop_id":"59999"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.27677,37.78286]},"properties":{"stop_id":"50541"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.276692,37.779082]},"properties":{"stop_id":"57700"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.276769,37.777035]},"properties":{"stop_id":"51551"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.276819,37.774893]},"properties":{"stop_id":"58899"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.27689,37.773067]},"properties":{"stop_id":"57750"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.276397,37.771353]},"properties":{"stop_id":"53365"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.273248,37.771233]},"properties":{"stop_id":"54330"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.272992,37.768814]},"properties":{"stop_id":"52246"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.271104,37.766071]},"properties":{"stop_id":"51531"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.266761,37.764664]},"properties":{"stop_id":"52972"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.262419,37.762617]},"properties":{"stop_id":"52976"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.262987,37.761634]},"properties":{"stop_id":"54784"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.263768,37.759281]},"properties":{"stop_id":"52132"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.260725,37.75815]},"properties":{"stop_id":"54387"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.25642,37.757074]},"properties":{"stop_id":"58278"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.255749,37.758264]},"properties":{"stop_id":"58178"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.254771,37.759409]},"properties":{"stop_id":"52256"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.253198,37.758749]},"properties":{"stop_id":"55499"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.249165,37.756778]},"properties":{"stop_id":"55523"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.248133,37.757783]},"properties":{"stop_id":"57797"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.245636,37.760726]},"properties":{"stop_id":"57767"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.24393,37.762793]},"properties":{"stop_id":"54877"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.241575,37.765601]},"properties":{"stop_id":"55546"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.239272,37.768309]},"properties":{"stop_id":"52379"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.238167,37.769631]},"properties":{"stop_id":"56433"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.237469,37.770456]},"properties":{"stop_id":"56488"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.235384,37.772679]},"properties":{"stop_id":"54337"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.231502,37.776698]},"properties":{"stop_id":"53118"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.230065,37.777883]},"properties":{"stop_id":"56738"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.225114,37.77534]},"properties":{"stop_id":"55533"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.225601,37.777902]},"properties":{"stop_id":"51289"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.224272,37.780577]},"properties":{"stop_id":"51246"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.223446,37.78221]},"properties":{"stop_id":"51247"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.222613,37.783946]},"properties":{"stop_id":"55596"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.222074,37.785323]},"properties":{"stop_id":"55878"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.221053,37.78784]},"properties":{"stop_id":"51248"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.220359,37.789598]},"properties":{"stop_id":"51976"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.219632,37.791395]},"properties":{"stop_id":"51249"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.218821,37.793439]},"properties":{"stop_id":"51263"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.217971,37.795589]},"properties":{"stop_id":"51066"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.2174,37.797024]},"properties":{"stop_id":"58806"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-122.216343,37.800099]},"properties":{"stop_id":"55595"}}]}`,
	},
}

func TestLineBetweenPositions(t *testing.T) {
	simpleLine := []Point{{0, 0}, {1, 0}, {2, 0}, {3, 0}}
	simpleDist := []float64{0, 1, 2, 3}
	diagLine := []Point{{0, 0}, {2, 1}, {4, 2}, {6, 3}}
	diagDist := []float64{0, 2.23606797749979, 4.47213595499958, 6.708203932499369}

	type lineTestCase struct {
		name        string
		line        []Point
		extraPoints []Point
		dists       []float64
		a           float64
		b           float64
		expect      []Point
		debugOnly   bool
	}
	testcases := []lineTestCase{
		{
			name:   "basic",
			line:   simpleLine,
			dists:  simpleDist,
			a:      0.5,
			b:      2.5,
			expect: []Point{{0.5, 0}, {1, 0}, {2, 0}, {2.5, 0}},
		},
		{
			name:   "oob 1",
			line:   simpleLine,
			dists:  simpleDist,
			a:      -1.0,
			b:      -0.5,
			expect: nil,
		},
		{
			name:   "oob 2",
			line:   simpleLine,
			dists:  simpleDist,
			a:      5.0,
			b:      6.0,
			expect: nil,
		},
		{
			name:   "oob 3",
			line:   simpleLine,
			dists:  simpleDist,
			a:      -0.5,
			b:      2.0,
			expect: nil,
		},
		{
			name:   "oob 4",
			line:   simpleLine,
			dists:  simpleDist,
			a:      0.5,
			b:      3.5,
			expect: nil,
		},
		{
			name:   "eq 1",
			line:   simpleLine,
			dists:  simpleDist,
			a:      0.0,
			b:      2.5,
			expect: []Point{{0, 0}, {1, 0}, {2, 0}, {2.5, 0}},
		},
		{
			name:   "eq 0",
			line:   simpleLine,
			dists:  simpleDist,
			a:      0.0,
			b:      3.0,
			expect: []Point{{0, 0}, {1, 0}, {2, 0}, {3.0, 0}},
		},
		{
			name:   "eq 2",
			line:   simpleLine,
			dists:  simpleDist,
			a:      0.5,
			b:      3.0,
			expect: []Point{{0.5, 0}, {1, 0}, {2, 0}, {3.0, 0}},
		},
		{
			name:   "diag 1",
			line:   diagLine,
			dists:  diagDist,
			a:      1,
			b:      4,
			expect: []Point{{0.8944271909999159, 0.4472135954999579}, {Lon: 2, Lat: 1}, {3.5777087639996634, 1.7888543819998317}},
		},
	}

	// In reality, actual shapes and trips do NOT have reliable shape_dist_traveled values.
	// You can enable trace logging to see this example from AC Transit.
	for _, dp := range lineBetweenPositionsData {
		line, dcPoints, err := decodeGeojson(dp.Geojson)
		if err != nil {
			t.Fatal(err)
		}
		lc := unflattenCoordinates(line.Stride(), line.FlatCoords())
		lcDists := []float64{}
		for _, pt := range line.Coords() {
			lcDists = append(lcDists, pt[2])
		}
		var points []Point
		for _, dcPoint := range dcPoints {
			points = append(points, Point{Lon: dcPoint.Coords()[0], Lat: dcPoint.Coords()[1]})
		}
		positions := LineRelativePositions(lc, points)
		lcLength := lcDists[len(lcDists)-1]
		for i := 1; i < len(dp.Positions); i++ {
			testcases = append(testcases, lineTestCase{
				name:        fmt.Sprintf("testPosition-%d", i),
				line:        lc,
				dists:       lcDists,
				extraPoints: []Point{points[i-1], points[i]},
				a:           positions[i-1] * lcLength,
				b:           positions[i] * lcLength,
				debugOnly:   true,
			})
		}
	}

	for _, tc := range testcases {
		t.Run(tc.name, func(t *testing.T) {
			ret := LineBetweenPositions(tc.line, tc.dists, tc.a, tc.b, tc.extraPoints...)
			if !tc.debugOnly {
				if len(ret) != len(tc.expect) {
					t.Error("expected len", len(tc.expect), "got len", len(ret))
				} else {
					for i := 0; i < len(tc.expect); i++ {
						assert.InDelta(t, 0, ret[i].Lon-tc.expect[i].Lon, 0.001, "expected to be within 0.001: %f - %f", ret[i].Lon, tc.expect[i].Lon)
						assert.InDelta(t, 0, ret[i].Lat-tc.expect[i].Lat, 0.001, "expected to be within 0.001: %f - %f", ret[i].Lat, tc.expect[i].Lat)
					}
				}
			}
		})
	}
}
