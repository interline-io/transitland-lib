// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: gtfs.proto

package tlpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WheelchairAccess int32

const (
	WheelchairAccess_WheelchairUnknown    WheelchairAccess = 0
	WheelchairAccess_WheelchairAllowed    WheelchairAccess = 1
	WheelchairAccess_WheelchairDisallowed WheelchairAccess = 2
)

// Enum value maps for WheelchairAccess.
var (
	WheelchairAccess_name = map[int32]string{
		0: "WheelchairUnknown",
		1: "WheelchairAllowed",
		2: "WheelchairDisallowed",
	}
	WheelchairAccess_value = map[string]int32{
		"WheelchairUnknown":    0,
		"WheelchairAllowed":    1,
		"WheelchairDisallowed": 2,
	}
)

func (x WheelchairAccess) Enum() *WheelchairAccess {
	p := new(WheelchairAccess)
	*p = x
	return p
}

func (x WheelchairAccess) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WheelchairAccess) Descriptor() protoreflect.EnumDescriptor {
	return file_gtfs_proto_enumTypes[0].Descriptor()
}

func (WheelchairAccess) Type() protoreflect.EnumType {
	return &file_gtfs_proto_enumTypes[0]
}

func (x WheelchairAccess) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WheelchairAccess.Descriptor instead.
func (WheelchairAccess) EnumDescriptor() ([]byte, []int) {
	return file_gtfs_proto_rawDescGZIP(), []int{0}
}

type BikeAccess int32

const (
	BikeAccess_BikeUnknown    BikeAccess = 0
	BikeAccess_BikeAllowed    BikeAccess = 1
	BikeAccess_BikeDisallowed BikeAccess = 2
)

// Enum value maps for BikeAccess.
var (
	BikeAccess_name = map[int32]string{
		0: "BikeUnknown",
		1: "BikeAllowed",
		2: "BikeDisallowed",
	}
	BikeAccess_value = map[string]int32{
		"BikeUnknown":    0,
		"BikeAllowed":    1,
		"BikeDisallowed": 2,
	}
)

func (x BikeAccess) Enum() *BikeAccess {
	p := new(BikeAccess)
	*p = x
	return p
}

func (x BikeAccess) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BikeAccess) Descriptor() protoreflect.EnumDescriptor {
	return file_gtfs_proto_enumTypes[1].Descriptor()
}

func (BikeAccess) Type() protoreflect.EnumType {
	return &file_gtfs_proto_enumTypes[1]
}

func (x BikeAccess) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BikeAccess.Descriptor instead.
func (BikeAccess) EnumDescriptor() ([]byte, []int) {
	return file_gtfs_proto_rawDescGZIP(), []int{1}
}

type BoardAccess int32

const (
	BoardAccess_BoardUnknown    BoardAccess = 0
	BoardAccess_BoardDisallowed BoardAccess = 1
	BoardAccess_BoardAllowed    BoardAccess = 2
	BoardAccess_BoardCoordinate BoardAccess = 3
)

// Enum value maps for BoardAccess.
var (
	BoardAccess_name = map[int32]string{
		0: "BoardUnknown",
		1: "BoardDisallowed",
		2: "BoardAllowed",
		3: "BoardCoordinate",
	}
	BoardAccess_value = map[string]int32{
		"BoardUnknown":    0,
		"BoardDisallowed": 1,
		"BoardAllowed":    2,
		"BoardCoordinate": 3,
	}
)

func (x BoardAccess) Enum() *BoardAccess {
	p := new(BoardAccess)
	*p = x
	return p
}

func (x BoardAccess) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BoardAccess) Descriptor() protoreflect.EnumDescriptor {
	return file_gtfs_proto_enumTypes[2].Descriptor()
}

func (BoardAccess) Type() protoreflect.EnumType {
	return &file_gtfs_proto_enumTypes[2]
}

func (x BoardAccess) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BoardAccess.Descriptor instead.
func (BoardAccess) EnumDescriptor() ([]byte, []int) {
	return file_gtfs_proto_rawDescGZIP(), []int{2}
}

type PickupAccess int32

const (
	PickupAccess_PickupContinuous PickupAccess = 0
	PickupAccess_PickupDisallowed PickupAccess = 1
	PickupAccess_PickupMustPhone  PickupAccess = 2
	PickupAccess_PickupAskDriver  PickupAccess = 3
)

// Enum value maps for PickupAccess.
var (
	PickupAccess_name = map[int32]string{
		0: "PickupContinuous",
		1: "PickupDisallowed",
		2: "PickupMustPhone",
		3: "PickupAskDriver",
	}
	PickupAccess_value = map[string]int32{
		"PickupContinuous": 0,
		"PickupDisallowed": 1,
		"PickupMustPhone":  2,
		"PickupAskDriver":  3,
	}
)

func (x PickupAccess) Enum() *PickupAccess {
	p := new(PickupAccess)
	*p = x
	return p
}

func (x PickupAccess) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PickupAccess) Descriptor() protoreflect.EnumDescriptor {
	return file_gtfs_proto_enumTypes[3].Descriptor()
}

func (PickupAccess) Type() protoreflect.EnumType {
	return &file_gtfs_proto_enumTypes[3]
}

func (x PickupAccess) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PickupAccess.Descriptor instead.
func (PickupAccess) EnumDescriptor() ([]byte, []int) {
	return file_gtfs_proto_rawDescGZIP(), []int{3}
}

type LocationType int32

const (
	LocationType_LocationPlatform     LocationType = 0
	LocationType_LocationStation      LocationType = 1
	LocationType_LocationEntrance     LocationType = 2
	LocationType_LocationNode         LocationType = 3
	LocationType_LocationBoardingArea LocationType = 4
)

// Enum value maps for LocationType.
var (
	LocationType_name = map[int32]string{
		0: "LocationPlatform",
		1: "LocationStation",
		2: "LocationEntrance",
		3: "LocationNode",
		4: "LocationBoardingArea",
	}
	LocationType_value = map[string]int32{
		"LocationPlatform":     0,
		"LocationStation":      1,
		"LocationEntrance":     2,
		"LocationNode":         3,
		"LocationBoardingArea": 4,
	}
)

func (x LocationType) Enum() *LocationType {
	p := new(LocationType)
	*p = x
	return p
}

func (x LocationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LocationType) Descriptor() protoreflect.EnumDescriptor {
	return file_gtfs_proto_enumTypes[4].Descriptor()
}

func (LocationType) Type() protoreflect.EnumType {
	return &file_gtfs_proto_enumTypes[4]
}

func (x LocationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LocationType.Descriptor instead.
func (LocationType) EnumDescriptor() ([]byte, []int) {
	return file_gtfs_proto_rawDescGZIP(), []int{4}
}

type RouteType int32

const (
	RouteType_VehicleTram      RouteType = 0
	RouteType_VehicleSubway    RouteType = 1
	RouteType_VehicleRail      RouteType = 2
	RouteType_VehicleBus       RouteType = 3
	RouteType_VehicleFerry     RouteType = 4
	RouteType_VehicleCablecar  RouteType = 5
	RouteType_VehicleGondola   RouteType = 6
	RouteType_VehicleFunicular RouteType = 7
	RouteType_VehicleTrollebus RouteType = 11
	RouteType_VehicleMonorail  RouteType = 12
)

// Enum value maps for RouteType.
var (
	RouteType_name = map[int32]string{
		0:  "VehicleTram",
		1:  "VehicleSubway",
		2:  "VehicleRail",
		3:  "VehicleBus",
		4:  "VehicleFerry",
		5:  "VehicleCablecar",
		6:  "VehicleGondola",
		7:  "VehicleFunicular",
		11: "VehicleTrollebus",
		12: "VehicleMonorail",
	}
	RouteType_value = map[string]int32{
		"VehicleTram":      0,
		"VehicleSubway":    1,
		"VehicleRail":      2,
		"VehicleBus":       3,
		"VehicleFerry":     4,
		"VehicleCablecar":  5,
		"VehicleGondola":   6,
		"VehicleFunicular": 7,
		"VehicleTrollebus": 11,
		"VehicleMonorail":  12,
	}
)

func (x RouteType) Enum() *RouteType {
	p := new(RouteType)
	*p = x
	return p
}

func (x RouteType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RouteType) Descriptor() protoreflect.EnumDescriptor {
	return file_gtfs_proto_enumTypes[5].Descriptor()
}

func (RouteType) Type() protoreflect.EnumType {
	return &file_gtfs_proto_enumTypes[5]
}

func (x RouteType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RouteType.Descriptor instead.
func (RouteType) EnumDescriptor() ([]byte, []int) {
	return file_gtfs_proto_rawDescGZIP(), []int{5}
}

type Direction int32

const (
	Direction_DirectionOutbound Direction = 0
	Direction_DirectionInbound  Direction = 1
)

// Enum value maps for Direction.
var (
	Direction_name = map[int32]string{
		0: "DirectionOutbound",
		1: "DirectionInbound",
	}
	Direction_value = map[string]int32{
		"DirectionOutbound": 0,
		"DirectionInbound":  1,
	}
)

func (x Direction) Enum() *Direction {
	p := new(Direction)
	*p = x
	return p
}

func (x Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_gtfs_proto_enumTypes[6].Descriptor()
}

func (Direction) Type() protoreflect.EnumType {
	return &file_gtfs_proto_enumTypes[6]
}

func (x Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Direction.Descriptor instead.
func (Direction) EnumDescriptor() ([]byte, []int) {
	return file_gtfs_proto_rawDescGZIP(), []int{6}
}

type Timepoint int32

const (
	Timepoint_Approximate Timepoint = 0
	Timepoint_Exact       Timepoint = 1
)

// Enum value maps for Timepoint.
var (
	Timepoint_name = map[int32]string{
		0: "Approximate",
		1: "Exact",
	}
	Timepoint_value = map[string]int32{
		"Approximate": 0,
		"Exact":       1,
	}
)

func (x Timepoint) Enum() *Timepoint {
	p := new(Timepoint)
	*p = x
	return p
}

func (x Timepoint) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Timepoint) Descriptor() protoreflect.EnumDescriptor {
	return file_gtfs_proto_enumTypes[7].Descriptor()
}

func (Timepoint) Type() protoreflect.EnumType {
	return &file_gtfs_proto_enumTypes[7]
}

func (x Timepoint) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Timepoint.Descriptor instead.
func (Timepoint) EnumDescriptor() ([]byte, []int) {
	return file_gtfs_proto_rawDescGZIP(), []int{7}
}

type CalendarExceptionType int32

const (
	CalendarExceptionType_CalendarUnknown CalendarExceptionType = 0
	CalendarExceptionType_CalendarAdded   CalendarExceptionType = 1
	CalendarExceptionType_CalendarRemoved CalendarExceptionType = 2
)

// Enum value maps for CalendarExceptionType.
var (
	CalendarExceptionType_name = map[int32]string{
		0: "CalendarUnknown",
		1: "CalendarAdded",
		2: "CalendarRemoved",
	}
	CalendarExceptionType_value = map[string]int32{
		"CalendarUnknown": 0,
		"CalendarAdded":   1,
		"CalendarRemoved": 2,
	}
)

func (x CalendarExceptionType) Enum() *CalendarExceptionType {
	p := new(CalendarExceptionType)
	*p = x
	return p
}

func (x CalendarExceptionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CalendarExceptionType) Descriptor() protoreflect.EnumDescriptor {
	return file_gtfs_proto_enumTypes[8].Descriptor()
}

func (CalendarExceptionType) Type() protoreflect.EnumType {
	return &file_gtfs_proto_enumTypes[8]
}

func (x CalendarExceptionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CalendarExceptionType.Descriptor instead.
func (CalendarExceptionType) EnumDescriptor() ([]byte, []int) {
	return file_gtfs_proto_rawDescGZIP(), []int{8}
}

type Date struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Year  int32 `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`
	Month int32 `protobuf:"varint,2,opt,name=month,proto3" json:"month,omitempty"`
	Day   int32 `protobuf:"varint,3,opt,name=day,proto3" json:"day,omitempty"`
}

func (x *Date) Reset() {
	*x = Date{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gtfs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Date) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Date) ProtoMessage() {}

func (x *Date) ProtoReflect() protoreflect.Message {
	mi := &file_gtfs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Date.ProtoReflect.Descriptor instead.
func (*Date) Descriptor() ([]byte, []int) {
	return file_gtfs_proto_rawDescGZIP(), []int{0}
}

func (x *Date) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *Date) GetMonth() int32 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *Date) GetDay() int32 {
	if x != nil {
		return x.Day
	}
	return 0
}

type Time struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seconds int64 `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
}

func (x *Time) Reset() {
	*x = Time{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gtfs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Time) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Time) ProtoMessage() {}

func (x *Time) ProtoReflect() protoreflect.Message {
	mi := &file_gtfs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Time.ProtoReflect.Descriptor instead.
func (*Time) Descriptor() ([]byte, []int) {
	return file_gtfs_proto_rawDescGZIP(), []int{1}
}

func (x *Time) GetSeconds() int64 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

type Seconds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seconds int64 `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
}

func (x *Seconds) Reset() {
	*x = Seconds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gtfs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Seconds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Seconds) ProtoMessage() {}

func (x *Seconds) ProtoReflect() protoreflect.Message {
	mi := &file_gtfs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Seconds.ProtoReflect.Descriptor instead.
func (*Seconds) Descriptor() ([]byte, []int) {
	return file_gtfs_proto_rawDescGZIP(), []int{2}
}

func (x *Seconds) GetSeconds() int64 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

type EntityID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *EntityID) Reset() {
	*x = EntityID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gtfs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityID) ProtoMessage() {}

func (x *EntityID) ProtoReflect() protoreflect.Message {
	mi := &file_gtfs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityID.ProtoReflect.Descriptor instead.
func (*EntityID) Descriptor() ([]byte, []int) {
	return file_gtfs_proto_rawDescGZIP(), []int{3}
}

func (x *EntityID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Timezone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timezone string `protobuf:"bytes,1,opt,name=timezone,proto3" json:"timezone,omitempty"`
}

func (x *Timezone) Reset() {
	*x = Timezone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gtfs_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Timezone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timezone) ProtoMessage() {}

func (x *Timezone) ProtoReflect() protoreflect.Message {
	mi := &file_gtfs_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timezone.ProtoReflect.Descriptor instead.
func (*Timezone) Descriptor() ([]byte, []int) {
	return file_gtfs_proto_rawDescGZIP(), []int{4}
}

func (x *Timezone) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

type Reference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId string `protobuf:"bytes,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
}

func (x *Reference) Reset() {
	*x = Reference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gtfs_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reference) ProtoMessage() {}

func (x *Reference) ProtoReflect() protoreflect.Message {
	mi := &file_gtfs_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reference.ProtoReflect.Descriptor instead.
func (*Reference) Descriptor() ([]byte, []int) {
	return file_gtfs_proto_rawDescGZIP(), []int{5}
}

func (x *Reference) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

type Url struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *Url) Reset() {
	*x = Url{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gtfs_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Url) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Url) ProtoMessage() {}

func (x *Url) ProtoReflect() protoreflect.Message {
	mi := &file_gtfs_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Url.ProtoReflect.Descriptor instead.
func (*Url) Descriptor() ([]byte, []int) {
	return file_gtfs_proto_rawDescGZIP(), []int{6}
}

func (x *Url) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type Color struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color string `protobuf:"bytes,1,opt,name=color,proto3" json:"color,omitempty"`
}

func (x *Color) Reset() {
	*x = Color{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gtfs_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Color) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Color) ProtoMessage() {}

func (x *Color) ProtoReflect() protoreflect.Message {
	mi := &file_gtfs_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Color.ProtoReflect.Descriptor instead.
func (*Color) Descriptor() ([]byte, []int) {
	return file_gtfs_proto_rawDescGZIP(), []int{7}
}

func (x *Color) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type FeedEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Agency   *Agency   `protobuf:"bytes,1,opt,name=agency,proto3" json:"agency,omitempty"`
	Stop     *Stop     `protobuf:"bytes,2,opt,name=stop,proto3" json:"stop,omitempty"`
	Route    *Route    `protobuf:"bytes,3,opt,name=route,proto3" json:"route,omitempty"`
	Trip     *Trip     `protobuf:"bytes,4,opt,name=trip,proto3" json:"trip,omitempty"`
	StopTime *StopTime `protobuf:"bytes,5,opt,name=stop_time,json=stopTime,proto3" json:"stop_time,omitempty"`
	Shape    *Shape    `protobuf:"bytes,6,opt,name=shape,proto3" json:"shape,omitempty"`
	Service  *Service  `protobuf:"bytes,7,opt,name=service,proto3" json:"service,omitempty"`
}

func (x *FeedEntity) Reset() {
	*x = FeedEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gtfs_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedEntity) ProtoMessage() {}

func (x *FeedEntity) ProtoReflect() protoreflect.Message {
	mi := &file_gtfs_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedEntity.ProtoReflect.Descriptor instead.
func (*FeedEntity) Descriptor() ([]byte, []int) {
	return file_gtfs_proto_rawDescGZIP(), []int{8}
}

func (x *FeedEntity) GetAgency() *Agency {
	if x != nil {
		return x.Agency
	}
	return nil
}

func (x *FeedEntity) GetStop() *Stop {
	if x != nil {
		return x.Stop
	}
	return nil
}

func (x *FeedEntity) GetRoute() *Route {
	if x != nil {
		return x.Route
	}
	return nil
}

func (x *FeedEntity) GetTrip() *Trip {
	if x != nil {
		return x.Trip
	}
	return nil
}

func (x *FeedEntity) GetStopTime() *StopTime {
	if x != nil {
		return x.StopTime
	}
	return nil
}

func (x *FeedEntity) GetShape() *Shape {
	if x != nil {
		return x.Shape
	}
	return nil
}

func (x *FeedEntity) GetService() *Service {
	if x != nil {
		return x.Service
	}
	return nil
}

type Agency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgencyId       *EntityID `protobuf:"bytes,1,opt,name=agency_id,json=agencyId,proto3" json:"agency_id,omitempty"`
	AgencyName     string    `protobuf:"bytes,2,opt,name=agency_name,json=agencyName,proto3" json:"agency_name,omitempty"`
	AgencyUrl      string    `protobuf:"bytes,3,opt,name=agency_url,json=agencyUrl,proto3" json:"agency_url,omitempty"`
	AgencyTimezone *Timezone `protobuf:"bytes,4,opt,name=agency_timezone,json=agencyTimezone,proto3" json:"agency_timezone,omitempty"`
	AgencyLang     string    `protobuf:"bytes,5,opt,name=agency_lang,json=agencyLang,proto3" json:"agency_lang,omitempty"`
	AgencyPhone    string    `protobuf:"bytes,6,opt,name=agency_phone,json=agencyPhone,proto3" json:"agency_phone,omitempty"`
	AgencyFareUrl  *Url      `protobuf:"bytes,7,opt,name=agency_fare_url,json=agencyFareUrl,proto3" json:"agency_fare_url,omitempty"`
	AgencyEmail    string    `protobuf:"bytes,8,opt,name=agency_email,json=agencyEmail,proto3" json:"agency_email,omitempty"`
}

func (x *Agency) Reset() {
	*x = Agency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gtfs_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Agency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Agency) ProtoMessage() {}

func (x *Agency) ProtoReflect() protoreflect.Message {
	mi := &file_gtfs_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Agency.ProtoReflect.Descriptor instead.
func (*Agency) Descriptor() ([]byte, []int) {
	return file_gtfs_proto_rawDescGZIP(), []int{9}
}

func (x *Agency) GetAgencyId() *EntityID {
	if x != nil {
		return x.AgencyId
	}
	return nil
}

func (x *Agency) GetAgencyName() string {
	if x != nil {
		return x.AgencyName
	}
	return ""
}

func (x *Agency) GetAgencyUrl() string {
	if x != nil {
		return x.AgencyUrl
	}
	return ""
}

func (x *Agency) GetAgencyTimezone() *Timezone {
	if x != nil {
		return x.AgencyTimezone
	}
	return nil
}

func (x *Agency) GetAgencyLang() string {
	if x != nil {
		return x.AgencyLang
	}
	return ""
}

func (x *Agency) GetAgencyPhone() string {
	if x != nil {
		return x.AgencyPhone
	}
	return ""
}

func (x *Agency) GetAgencyFareUrl() *Url {
	if x != nil {
		return x.AgencyFareUrl
	}
	return nil
}

func (x *Agency) GetAgencyEmail() string {
	if x != nil {
		return x.AgencyEmail
	}
	return ""
}

type Stop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StopId             *EntityID        `protobuf:"bytes,1,opt,name=stop_id,json=stopId,proto3" json:"stop_id,omitempty"`
	StopCode           string           `protobuf:"bytes,2,opt,name=stop_code,json=stopCode,proto3" json:"stop_code,omitempty"`
	StopName           string           `protobuf:"bytes,3,opt,name=stop_name,json=stopName,proto3" json:"stop_name,omitempty"`
	TtsStopName        string           `protobuf:"bytes,4,opt,name=tts_stop_name,json=ttsStopName,proto3" json:"tts_stop_name,omitempty"`
	StopDesc           string           `protobuf:"bytes,5,opt,name=stop_desc,json=stopDesc,proto3" json:"stop_desc,omitempty"`
	StopLat            float64          `protobuf:"fixed64,6,opt,name=stop_lat,json=stopLat,proto3" json:"stop_lat,omitempty"`
	StopLon            float64          `protobuf:"fixed64,7,opt,name=stop_lon,json=stopLon,proto3" json:"stop_lon,omitempty"`
	ZoneId             string           `protobuf:"bytes,8,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	StopUrl            *Url             `protobuf:"bytes,9,opt,name=stop_url,json=stopUrl,proto3" json:"stop_url,omitempty"`
	LocationType       LocationType     `protobuf:"varint,10,opt,name=location_type,json=locationType,proto3,enum=LocationType" json:"location_type,omitempty"`
	ParentStation      *Reference       `protobuf:"bytes,11,opt,name=parent_station,json=parentStation,proto3" json:"parent_station,omitempty"`
	StopTimezone       *Timezone        `protobuf:"bytes,12,opt,name=stop_timezone,json=stopTimezone,proto3" json:"stop_timezone,omitempty"`
	WheelchairBoarding WheelchairAccess `protobuf:"varint,13,opt,name=wheelchair_boarding,json=wheelchairBoarding,proto3,enum=WheelchairAccess" json:"wheelchair_boarding,omitempty"`
	LevelId            *Reference       `protobuf:"bytes,14,opt,name=level_id,json=levelId,proto3" json:"level_id,omitempty"`
	PlatformCode       string           `protobuf:"bytes,15,opt,name=platform_code,json=platformCode,proto3" json:"platform_code,omitempty"`
}

func (x *Stop) Reset() {
	*x = Stop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gtfs_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stop) ProtoMessage() {}

func (x *Stop) ProtoReflect() protoreflect.Message {
	mi := &file_gtfs_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stop.ProtoReflect.Descriptor instead.
func (*Stop) Descriptor() ([]byte, []int) {
	return file_gtfs_proto_rawDescGZIP(), []int{10}
}

func (x *Stop) GetStopId() *EntityID {
	if x != nil {
		return x.StopId
	}
	return nil
}

func (x *Stop) GetStopCode() string {
	if x != nil {
		return x.StopCode
	}
	return ""
}

func (x *Stop) GetStopName() string {
	if x != nil {
		return x.StopName
	}
	return ""
}

func (x *Stop) GetTtsStopName() string {
	if x != nil {
		return x.TtsStopName
	}
	return ""
}

func (x *Stop) GetStopDesc() string {
	if x != nil {
		return x.StopDesc
	}
	return ""
}

func (x *Stop) GetStopLat() float64 {
	if x != nil {
		return x.StopLat
	}
	return 0
}

func (x *Stop) GetStopLon() float64 {
	if x != nil {
		return x.StopLon
	}
	return 0
}

func (x *Stop) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *Stop) GetStopUrl() *Url {
	if x != nil {
		return x.StopUrl
	}
	return nil
}

func (x *Stop) GetLocationType() LocationType {
	if x != nil {
		return x.LocationType
	}
	return LocationType_LocationPlatform
}

func (x *Stop) GetParentStation() *Reference {
	if x != nil {
		return x.ParentStation
	}
	return nil
}

func (x *Stop) GetStopTimezone() *Timezone {
	if x != nil {
		return x.StopTimezone
	}
	return nil
}

func (x *Stop) GetWheelchairBoarding() WheelchairAccess {
	if x != nil {
		return x.WheelchairBoarding
	}
	return WheelchairAccess_WheelchairUnknown
}

func (x *Stop) GetLevelId() *Reference {
	if x != nil {
		return x.LevelId
	}
	return nil
}

func (x *Stop) GetPlatformCode() string {
	if x != nil {
		return x.PlatformCode
	}
	return ""
}

type Route struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouteId           *EntityID    `protobuf:"bytes,1,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"`
	AgencyId          *Reference   `protobuf:"bytes,2,opt,name=agency_id,json=agencyId,proto3" json:"agency_id,omitempty"`
	RouteShortName    string       `protobuf:"bytes,3,opt,name=route_short_name,json=routeShortName,proto3" json:"route_short_name,omitempty"`
	RouteLongName     string       `protobuf:"bytes,4,opt,name=route_long_name,json=routeLongName,proto3" json:"route_long_name,omitempty"`
	RouteDesc         string       `protobuf:"bytes,5,opt,name=route_desc,json=routeDesc,proto3" json:"route_desc,omitempty"`
	RouteType         RouteType    `protobuf:"varint,6,opt,name=route_type,json=routeType,proto3,enum=RouteType" json:"route_type,omitempty"`
	RouteUrl          *Url         `protobuf:"bytes,7,opt,name=route_url,json=routeUrl,proto3" json:"route_url,omitempty"`
	RouteColor        *Color       `protobuf:"bytes,8,opt,name=route_color,json=routeColor,proto3" json:"route_color,omitempty"`
	RouteTextColor    *Color       `protobuf:"bytes,9,opt,name=route_text_color,json=routeTextColor,proto3" json:"route_text_color,omitempty"`
	RouteSortOrder    int32        `protobuf:"varint,10,opt,name=route_sort_order,json=routeSortOrder,proto3" json:"route_sort_order,omitempty"`
	ContinuousPickup  PickupAccess `protobuf:"varint,11,opt,name=continuous_pickup,json=continuousPickup,proto3,enum=PickupAccess" json:"continuous_pickup,omitempty"`
	ContinuousDropOff PickupAccess `protobuf:"varint,12,opt,name=continuous_drop_off,json=continuousDropOff,proto3,enum=PickupAccess" json:"continuous_drop_off,omitempty"`
	NetworkId         string       `protobuf:"bytes,13,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
}

func (x *Route) Reset() {
	*x = Route{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gtfs_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Route) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Route) ProtoMessage() {}

func (x *Route) ProtoReflect() protoreflect.Message {
	mi := &file_gtfs_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Route.ProtoReflect.Descriptor instead.
func (*Route) Descriptor() ([]byte, []int) {
	return file_gtfs_proto_rawDescGZIP(), []int{11}
}

func (x *Route) GetRouteId() *EntityID {
	if x != nil {
		return x.RouteId
	}
	return nil
}

func (x *Route) GetAgencyId() *Reference {
	if x != nil {
		return x.AgencyId
	}
	return nil
}

func (x *Route) GetRouteShortName() string {
	if x != nil {
		return x.RouteShortName
	}
	return ""
}

func (x *Route) GetRouteLongName() string {
	if x != nil {
		return x.RouteLongName
	}
	return ""
}

func (x *Route) GetRouteDesc() string {
	if x != nil {
		return x.RouteDesc
	}
	return ""
}

func (x *Route) GetRouteType() RouteType {
	if x != nil {
		return x.RouteType
	}
	return RouteType_VehicleTram
}

func (x *Route) GetRouteUrl() *Url {
	if x != nil {
		return x.RouteUrl
	}
	return nil
}

func (x *Route) GetRouteColor() *Color {
	if x != nil {
		return x.RouteColor
	}
	return nil
}

func (x *Route) GetRouteTextColor() *Color {
	if x != nil {
		return x.RouteTextColor
	}
	return nil
}

func (x *Route) GetRouteSortOrder() int32 {
	if x != nil {
		return x.RouteSortOrder
	}
	return 0
}

func (x *Route) GetContinuousPickup() PickupAccess {
	if x != nil {
		return x.ContinuousPickup
	}
	return PickupAccess_PickupContinuous
}

func (x *Route) GetContinuousDropOff() PickupAccess {
	if x != nil {
		return x.ContinuousDropOff
	}
	return PickupAccess_PickupContinuous
}

func (x *Route) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

type Trip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouteId              *Reference       `protobuf:"bytes,1,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"`
	ServiceId            *Reference       `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	TripId               *EntityID        `protobuf:"bytes,3,opt,name=trip_id,json=tripId,proto3" json:"trip_id,omitempty"`
	TripHeadsign         string           `protobuf:"bytes,4,opt,name=trip_headsign,json=tripHeadsign,proto3" json:"trip_headsign,omitempty"`
	TripShortName        string           `protobuf:"bytes,5,opt,name=trip_short_name,json=tripShortName,proto3" json:"trip_short_name,omitempty"`
	DirectionId          Direction        `protobuf:"varint,6,opt,name=direction_id,json=directionId,proto3,enum=Direction" json:"direction_id,omitempty"`
	BlockId              string           `protobuf:"bytes,7,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	ShapeId              *Reference       `protobuf:"bytes,8,opt,name=shape_id,json=shapeId,proto3" json:"shape_id,omitempty"`
	WheelchairAccessible WheelchairAccess `protobuf:"varint,9,opt,name=wheelchair_accessible,json=wheelchairAccessible,proto3,enum=WheelchairAccess" json:"wheelchair_accessible,omitempty"`
	BikesAllowed         BikeAccess       `protobuf:"varint,10,opt,name=bikes_allowed,json=bikesAllowed,proto3,enum=BikeAccess" json:"bikes_allowed,omitempty"`
}

func (x *Trip) Reset() {
	*x = Trip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gtfs_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trip) ProtoMessage() {}

func (x *Trip) ProtoReflect() protoreflect.Message {
	mi := &file_gtfs_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trip.ProtoReflect.Descriptor instead.
func (*Trip) Descriptor() ([]byte, []int) {
	return file_gtfs_proto_rawDescGZIP(), []int{12}
}

func (x *Trip) GetRouteId() *Reference {
	if x != nil {
		return x.RouteId
	}
	return nil
}

func (x *Trip) GetServiceId() *Reference {
	if x != nil {
		return x.ServiceId
	}
	return nil
}

func (x *Trip) GetTripId() *EntityID {
	if x != nil {
		return x.TripId
	}
	return nil
}

func (x *Trip) GetTripHeadsign() string {
	if x != nil {
		return x.TripHeadsign
	}
	return ""
}

func (x *Trip) GetTripShortName() string {
	if x != nil {
		return x.TripShortName
	}
	return ""
}

func (x *Trip) GetDirectionId() Direction {
	if x != nil {
		return x.DirectionId
	}
	return Direction_DirectionOutbound
}

func (x *Trip) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *Trip) GetShapeId() *Reference {
	if x != nil {
		return x.ShapeId
	}
	return nil
}

func (x *Trip) GetWheelchairAccessible() WheelchairAccess {
	if x != nil {
		return x.WheelchairAccessible
	}
	return WheelchairAccess_WheelchairUnknown
}

func (x *Trip) GetBikesAllowed() BikeAccess {
	if x != nil {
		return x.BikesAllowed
	}
	return BikeAccess_BikeUnknown
}

type StopTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TripId            *Reference   `protobuf:"bytes,1,opt,name=trip_id,json=tripId,proto3" json:"trip_id,omitempty"`
	ArrivalTime       *Seconds     `protobuf:"bytes,2,opt,name=arrival_time,json=arrivalTime,proto3" json:"arrival_time,omitempty"`
	DepartureTime     *Seconds     `protobuf:"bytes,3,opt,name=departure_time,json=departureTime,proto3" json:"departure_time,omitempty"`
	StopId            *Reference   `protobuf:"bytes,4,opt,name=stop_id,json=stopId,proto3" json:"stop_id,omitempty"`
	StopSequence      int32        `protobuf:"varint,5,opt,name=stop_sequence,json=stopSequence,proto3" json:"stop_sequence,omitempty"`
	StopHeadsign      string       `protobuf:"bytes,6,opt,name=stop_headsign,json=stopHeadsign,proto3" json:"stop_headsign,omitempty"`
	ContinuousPickup  PickupAccess `protobuf:"varint,7,opt,name=continuous_pickup,json=continuousPickup,proto3,enum=PickupAccess" json:"continuous_pickup,omitempty"`
	ContinuousDropOff PickupAccess `protobuf:"varint,8,opt,name=continuous_drop_off,json=continuousDropOff,proto3,enum=PickupAccess" json:"continuous_drop_off,omitempty"`
	ShapeDistTraveled float64      `protobuf:"fixed64,9,opt,name=shape_dist_traveled,json=shapeDistTraveled,proto3" json:"shape_dist_traveled,omitempty"`
	Timepoint         Timepoint    `protobuf:"varint,10,opt,name=timepoint,proto3,enum=Timepoint" json:"timepoint,omitempty"`
}

func (x *StopTime) Reset() {
	*x = StopTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gtfs_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopTime) ProtoMessage() {}

func (x *StopTime) ProtoReflect() protoreflect.Message {
	mi := &file_gtfs_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopTime.ProtoReflect.Descriptor instead.
func (*StopTime) Descriptor() ([]byte, []int) {
	return file_gtfs_proto_rawDescGZIP(), []int{13}
}

func (x *StopTime) GetTripId() *Reference {
	if x != nil {
		return x.TripId
	}
	return nil
}

func (x *StopTime) GetArrivalTime() *Seconds {
	if x != nil {
		return x.ArrivalTime
	}
	return nil
}

func (x *StopTime) GetDepartureTime() *Seconds {
	if x != nil {
		return x.DepartureTime
	}
	return nil
}

func (x *StopTime) GetStopId() *Reference {
	if x != nil {
		return x.StopId
	}
	return nil
}

func (x *StopTime) GetStopSequence() int32 {
	if x != nil {
		return x.StopSequence
	}
	return 0
}

func (x *StopTime) GetStopHeadsign() string {
	if x != nil {
		return x.StopHeadsign
	}
	return ""
}

func (x *StopTime) GetContinuousPickup() PickupAccess {
	if x != nil {
		return x.ContinuousPickup
	}
	return PickupAccess_PickupContinuous
}

func (x *StopTime) GetContinuousDropOff() PickupAccess {
	if x != nil {
		return x.ContinuousDropOff
	}
	return PickupAccess_PickupContinuous
}

func (x *StopTime) GetShapeDistTraveled() float64 {
	if x != nil {
		return x.ShapeDistTraveled
	}
	return 0
}

func (x *StopTime) GetTimepoint() Timepoint {
	if x != nil {
		return x.Timepoint
	}
	return Timepoint_Approximate
}

type Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId *EntityID `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	StartDate *Date     `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate   *Date     `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Added     []*Date   `protobuf:"bytes,4,rep,name=added,proto3" json:"added,omitempty"`
	Removed   []*Date   `protobuf:"bytes,5,rep,name=removed,proto3" json:"removed,omitempty"`
	Monday    bool      `protobuf:"varint,6,opt,name=monday,proto3" json:"monday,omitempty"`
	Tuesday   bool      `protobuf:"varint,7,opt,name=tuesday,proto3" json:"tuesday,omitempty"`
	Wednesday bool      `protobuf:"varint,8,opt,name=wednesday,proto3" json:"wednesday,omitempty"`
	Thursday  bool      `protobuf:"varint,9,opt,name=thursday,proto3" json:"thursday,omitempty"`
	Friday    bool      `protobuf:"varint,10,opt,name=friday,proto3" json:"friday,omitempty"`
	Saturday  bool      `protobuf:"varint,11,opt,name=saturday,proto3" json:"saturday,omitempty"`
	Sunday    bool      `protobuf:"varint,12,opt,name=sunday,proto3" json:"sunday,omitempty"`
}

func (x *Service) Reset() {
	*x = Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gtfs_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service) ProtoMessage() {}

func (x *Service) ProtoReflect() protoreflect.Message {
	mi := &file_gtfs_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service.ProtoReflect.Descriptor instead.
func (*Service) Descriptor() ([]byte, []int) {
	return file_gtfs_proto_rawDescGZIP(), []int{14}
}

func (x *Service) GetServiceId() *EntityID {
	if x != nil {
		return x.ServiceId
	}
	return nil
}

func (x *Service) GetStartDate() *Date {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *Service) GetEndDate() *Date {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *Service) GetAdded() []*Date {
	if x != nil {
		return x.Added
	}
	return nil
}

func (x *Service) GetRemoved() []*Date {
	if x != nil {
		return x.Removed
	}
	return nil
}

func (x *Service) GetMonday() bool {
	if x != nil {
		return x.Monday
	}
	return false
}

func (x *Service) GetTuesday() bool {
	if x != nil {
		return x.Tuesday
	}
	return false
}

func (x *Service) GetWednesday() bool {
	if x != nil {
		return x.Wednesday
	}
	return false
}

func (x *Service) GetThursday() bool {
	if x != nil {
		return x.Thursday
	}
	return false
}

func (x *Service) GetFriday() bool {
	if x != nil {
		return x.Friday
	}
	return false
}

func (x *Service) GetSaturday() bool {
	if x != nil {
		return x.Saturday
	}
	return false
}

func (x *Service) GetSunday() bool {
	if x != nil {
		return x.Sunday
	}
	return false
}

type Calendar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId *EntityID `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	StartDate *Date     `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate   *Date     `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Monday    bool      `protobuf:"varint,4,opt,name=monday,proto3" json:"monday,omitempty"`
	Tuesday   bool      `protobuf:"varint,5,opt,name=tuesday,proto3" json:"tuesday,omitempty"`
	Wednesday bool      `protobuf:"varint,6,opt,name=wednesday,proto3" json:"wednesday,omitempty"`
	Thursday  bool      `protobuf:"varint,7,opt,name=thursday,proto3" json:"thursday,omitempty"`
	Friday    bool      `protobuf:"varint,8,opt,name=friday,proto3" json:"friday,omitempty"`
	Saturday  bool      `protobuf:"varint,9,opt,name=saturday,proto3" json:"saturday,omitempty"`
	Sunday    bool      `protobuf:"varint,10,opt,name=sunday,proto3" json:"sunday,omitempty"`
}

func (x *Calendar) Reset() {
	*x = Calendar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gtfs_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Calendar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Calendar) ProtoMessage() {}

func (x *Calendar) ProtoReflect() protoreflect.Message {
	mi := &file_gtfs_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Calendar.ProtoReflect.Descriptor instead.
func (*Calendar) Descriptor() ([]byte, []int) {
	return file_gtfs_proto_rawDescGZIP(), []int{15}
}

func (x *Calendar) GetServiceId() *EntityID {
	if x != nil {
		return x.ServiceId
	}
	return nil
}

func (x *Calendar) GetStartDate() *Date {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *Calendar) GetEndDate() *Date {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *Calendar) GetMonday() bool {
	if x != nil {
		return x.Monday
	}
	return false
}

func (x *Calendar) GetTuesday() bool {
	if x != nil {
		return x.Tuesday
	}
	return false
}

func (x *Calendar) GetWednesday() bool {
	if x != nil {
		return x.Wednesday
	}
	return false
}

func (x *Calendar) GetThursday() bool {
	if x != nil {
		return x.Thursday
	}
	return false
}

func (x *Calendar) GetFriday() bool {
	if x != nil {
		return x.Friday
	}
	return false
}

func (x *Calendar) GetSaturday() bool {
	if x != nil {
		return x.Saturday
	}
	return false
}

func (x *Calendar) GetSunday() bool {
	if x != nil {
		return x.Sunday
	}
	return false
}

type CalendarDate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId     *Reference            `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Date          *Date                 `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	ExceptionType CalendarExceptionType `protobuf:"varint,3,opt,name=exception_type,json=exceptionType,proto3,enum=CalendarExceptionType" json:"exception_type,omitempty"`
}

func (x *CalendarDate) Reset() {
	*x = CalendarDate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gtfs_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalendarDate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalendarDate) ProtoMessage() {}

func (x *CalendarDate) ProtoReflect() protoreflect.Message {
	mi := &file_gtfs_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalendarDate.ProtoReflect.Descriptor instead.
func (*CalendarDate) Descriptor() ([]byte, []int) {
	return file_gtfs_proto_rawDescGZIP(), []int{16}
}

func (x *CalendarDate) GetServiceId() *Reference {
	if x != nil {
		return x.ServiceId
	}
	return nil
}

func (x *CalendarDate) GetDate() *Date {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *CalendarDate) GetExceptionType() CalendarExceptionType {
	if x != nil {
		return x.ExceptionType
	}
	return CalendarExceptionType_CalendarUnknown
}

type ShapePoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShapeId           *EntityID `protobuf:"bytes,1,opt,name=shape_id,json=shapeId,proto3" json:"shape_id,omitempty"`
	ShapePtLat        float64   `protobuf:"fixed64,2,opt,name=shape_pt_lat,json=shapePtLat,proto3" json:"shape_pt_lat,omitempty"`
	ShapePtLon        float64   `protobuf:"fixed64,3,opt,name=shape_pt_lon,json=shapePtLon,proto3" json:"shape_pt_lon,omitempty"`
	ShapePtSequence   int32     `protobuf:"varint,4,opt,name=shape_pt_sequence,json=shapePtSequence,proto3" json:"shape_pt_sequence,omitempty"`
	ShapeDistTraveled float64   `protobuf:"fixed64,5,opt,name=shape_dist_traveled,json=shapeDistTraveled,proto3" json:"shape_dist_traveled,omitempty"`
}

func (x *ShapePoint) Reset() {
	*x = ShapePoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gtfs_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShapePoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShapePoint) ProtoMessage() {}

func (x *ShapePoint) ProtoReflect() protoreflect.Message {
	mi := &file_gtfs_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShapePoint.ProtoReflect.Descriptor instead.
func (*ShapePoint) Descriptor() ([]byte, []int) {
	return file_gtfs_proto_rawDescGZIP(), []int{17}
}

func (x *ShapePoint) GetShapeId() *EntityID {
	if x != nil {
		return x.ShapeId
	}
	return nil
}

func (x *ShapePoint) GetShapePtLat() float64 {
	if x != nil {
		return x.ShapePtLat
	}
	return 0
}

func (x *ShapePoint) GetShapePtLon() float64 {
	if x != nil {
		return x.ShapePtLon
	}
	return 0
}

func (x *ShapePoint) GetShapePtSequence() int32 {
	if x != nil {
		return x.ShapePtSequence
	}
	return 0
}

func (x *ShapePoint) GetShapeDistTraveled() float64 {
	if x != nil {
		return x.ShapeDistTraveled
	}
	return 0
}

type Shape struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShapeId *EntityID   `protobuf:"bytes,1,opt,name=shape_id,json=shapeId,proto3" json:"shape_id,omitempty"`
	Shape   *LineString `protobuf:"bytes,2,opt,name=shape,proto3" json:"shape,omitempty"`
}

func (x *Shape) Reset() {
	*x = Shape{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gtfs_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Shape) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shape) ProtoMessage() {}

func (x *Shape) ProtoReflect() protoreflect.Message {
	mi := &file_gtfs_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Shape.ProtoReflect.Descriptor instead.
func (*Shape) Descriptor() ([]byte, []int) {
	return file_gtfs_proto_rawDescGZIP(), []int{18}
}

func (x *Shape) GetShapeId() *EntityID {
	if x != nil {
		return x.ShapeId
	}
	return nil
}

func (x *Shape) GetShape() *LineString {
	if x != nil {
		return x.Shape
	}
	return nil
}

type Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lon float32 `protobuf:"fixed32,1,opt,name=lon,proto3" json:"lon,omitempty"`
	Lat float32 `protobuf:"fixed32,2,opt,name=lat,proto3" json:"lat,omitempty"`
}

func (x *Point) Reset() {
	*x = Point{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gtfs_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_gtfs_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_gtfs_proto_rawDescGZIP(), []int{19}
}

func (x *Point) GetLon() float32 {
	if x != nil {
		return x.Lon
	}
	return 0
}

func (x *Point) GetLat() float32 {
	if x != nil {
		return x.Lat
	}
	return 0
}

type LineString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stride      int32     `protobuf:"varint,1,opt,name=stride,proto3" json:"stride,omitempty"`
	Coordinates []float64 `protobuf:"fixed64,2,rep,packed,name=coordinates,proto3" json:"coordinates,omitempty"`
}

func (x *LineString) Reset() {
	*x = LineString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gtfs_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LineString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LineString) ProtoMessage() {}

func (x *LineString) ProtoReflect() protoreflect.Message {
	mi := &file_gtfs_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LineString.ProtoReflect.Descriptor instead.
func (*LineString) Descriptor() ([]byte, []int) {
	return file_gtfs_proto_rawDescGZIP(), []int{20}
}

func (x *LineString) GetStride() int32 {
	if x != nil {
		return x.Stride
	}
	return 0
}

func (x *LineString) GetCoordinates() []float64 {
	if x != nil {
		return x.Coordinates
	}
	return nil
}

var File_gtfs_proto protoreflect.FileDescriptor

var file_gtfs_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x67, 0x74, 0x66, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x42, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x10,
	0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x64, 0x61, 0x79,
	0x22, 0x20, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x22, 0x23, 0x0a, 0x07, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x1a, 0x0a, 0x08, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x26, 0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x22, 0x28, 0x0a, 0x09, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x17, 0x0a, 0x03, 0x55, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x1d,
	0x0a, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0xeb, 0x01,
	0x0a, 0x0a, 0x46, 0x65, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x06,
	0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x41,
	0x67, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x06, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x19, 0x0a,
	0x04, 0x73, 0x74, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x53, 0x74,
	0x6f, 0x70, 0x52, 0x04, 0x73, 0x74, 0x6f, 0x70, 0x12, 0x1c, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52,
	0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x74, 0x72, 0x69, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x72, 0x69, 0x70, 0x52, 0x04, 0x74, 0x72, 0x69,
	0x70, 0x12, 0x26, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x08, 0x73, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x73, 0x68, 0x61,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x53, 0x68, 0x61, 0x70, 0x65,
	0x52, 0x05, 0x73, 0x68, 0x61, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0xb9, 0x02, 0x0a, 0x06,
	0x41, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x26, 0x0a, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x44, 0x52, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x32,
	0x0a, 0x0f, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x7a, 0x6f,
	0x6e, 0x65, 0x52, 0x0e, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x7a, 0x6f,
	0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x6c, 0x61, 0x6e,
	0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x4c,
	0x61, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x67, 0x65, 0x6e, 0x63,
	0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x2c, 0x0a, 0x0f, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79,
	0x5f, 0x66, 0x61, 0x72, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x04, 0x2e, 0x55, 0x72, 0x6c, 0x52, 0x0d, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x46, 0x61, 0x72,
	0x65, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x67, 0x65, 0x6e,
	0x63, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0xbc, 0x04, 0x0a, 0x04, 0x53, 0x74, 0x6f, 0x70,
	0x12, 0x22, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x52, 0x06, 0x73, 0x74,
	0x6f, 0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22,
	0x0a, 0x0d, 0x74, 0x74, 0x73, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x74, 0x73, 0x53, 0x74, 0x6f, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x44, 0x65, 0x73, 0x63, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x6c, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x70, 0x4c, 0x61, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74,
	0x6f, 0x70, 0x5f, 0x6c, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x73, 0x74,
	0x6f, 0x70, 0x4c, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x04, 0x2e, 0x55, 0x72, 0x6c, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x70, 0x55, 0x72, 0x6c, 0x12,
	0x32, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x70, 0x54, 0x69,
	0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x42, 0x0a, 0x13, 0x77, 0x68, 0x65, 0x65, 0x6c, 0x63,
	0x68, 0x61, 0x69, 0x72, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x63, 0x68, 0x61, 0x69, 0x72,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x12, 0x77, 0x68, 0x65, 0x65, 0x6c, 0x63, 0x68, 0x61,
	0x69, 0x72, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x25, 0x0a, 0x08, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x07, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x49,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xb4, 0x04, 0x0a, 0x05, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x12, 0x24, 0x0a, 0x08, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x52, 0x07, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x64, 0x12,
	0x28, 0x0a, 0x10, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x4c, 0x6f, 0x6e, 0x67, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x44, 0x65, 0x73, 0x63,
	0x12, 0x29, 0x0a, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x09, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x09, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x04,
	0x2e, 0x55, 0x72, 0x6c, 0x52, 0x08, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x27,
	0x0a, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x0a, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x10, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x06, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x0e, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x54, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75,
	0x73, 0x5f, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d,
	0x2e, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x10, 0x63,
	0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x12,
	0x3d, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x5f, 0x64, 0x72,
	0x6f, 0x70, 0x5f, 0x6f, 0x66, 0x66, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x50,
	0x69, 0x63, 0x6b, 0x75, 0x70, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x11, 0x63, 0x6f, 0x6e,
	0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x4f, 0x66, 0x66, 0x12, 0x1d,
	0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x22, 0xb4, 0x03,
	0x0a, 0x04, 0x54, 0x72, 0x69, 0x70, 0x12, 0x25, 0x0a, 0x08, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x64, 0x12, 0x29, 0x0a,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x07, 0x74, 0x72, 0x69, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x44, 0x52, 0x06, 0x74, 0x72, 0x69, 0x70, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x74, 0x72, 0x69, 0x70, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x72, 0x69, 0x70, 0x48, 0x65, 0x61, 0x64, 0x73, 0x69, 0x67,
	0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x69, 0x70,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x0c, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0a, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x07, 0x73, 0x68, 0x61, 0x70, 0x65, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x15, 0x77, 0x68,
	0x65, 0x65, 0x6c, 0x63, 0x68, 0x61, 0x69, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x69,
	0x62, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x57, 0x68, 0x65, 0x65,
	0x6c, 0x63, 0x68, 0x61, 0x69, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x14, 0x77, 0x68,
	0x65, 0x65, 0x6c, 0x63, 0x68, 0x61, 0x69, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x69, 0x62,
	0x6c, 0x65, 0x12, 0x30, 0x0a, 0x0d, 0x62, 0x69, 0x6b, 0x65, 0x73, 0x5f, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x42, 0x69, 0x6b, 0x65,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x0c, 0x62, 0x69, 0x6b, 0x65, 0x73, 0x41, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x64, 0x22, 0xd1, 0x03, 0x0a, 0x08, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x23, 0x0a, 0x07, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x06,
	0x74, 0x72, 0x69, 0x70, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x0c, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61,
	0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x53,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x0b, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x53, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x0d, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x06, 0x73, 0x74, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x6f,
	0x70, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x73, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x73, 0x69, 0x67, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x70, 0x48, 0x65, 0x61, 0x64, 0x73,
	0x69, 0x67, 0x6e, 0x12, 0x3a, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75,
	0x73, 0x5f, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d,
	0x2e, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x10, 0x63,
	0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x12,
	0x3d, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x5f, 0x64, 0x72,
	0x6f, 0x70, 0x5f, 0x6f, 0x66, 0x66, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x50,
	0x69, 0x63, 0x6b, 0x75, 0x70, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x11, 0x63, 0x6f, 0x6e,
	0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x4f, 0x66, 0x66, 0x12, 0x2e,
	0x0a, 0x13, 0x73, 0x68, 0x61, 0x70, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x5f, 0x74, 0x72, 0x61,
	0x76, 0x65, 0x6c, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x73, 0x68, 0x61,
	0x70, 0x65, 0x44, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x65, 0x64, 0x12, 0x28,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0a, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0xf1, 0x02, 0x0a, 0x07, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x44, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x24,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x05, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x05, 0x61, 0x64,
	0x64, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x07, 0x72, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x6e, 0x64, 0x61, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6d, 0x6f, 0x6e, 0x64, 0x61, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x75, 0x65, 0x73, 0x64, 0x61, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x74,
	0x75, 0x65, 0x73, 0x64, 0x61, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x65, 0x64, 0x6e, 0x65, 0x73,
	0x64, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x77, 0x65, 0x64, 0x6e, 0x65,
	0x73, 0x64, 0x61, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x68, 0x75, 0x72, 0x73, 0x64, 0x61, 0x79,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x74, 0x68, 0x75, 0x72, 0x73, 0x64, 0x61, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x72, 0x69, 0x64, 0x61, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x66, 0x72, 0x69, 0x64, 0x61, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x61, 0x74, 0x75,
	0x72, 0x64, 0x61, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x61, 0x74, 0x75,
	0x72, 0x64, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x6e, 0x64, 0x61, 0x79, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x75, 0x6e, 0x64, 0x61, 0x79, 0x22, 0xb4, 0x02, 0x0a,
	0x08, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x12, 0x28, 0x0a, 0x0a, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x08, 0x65, 0x6e, 0x64,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x44, 0x61,
	0x74, 0x65, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x6f, 0x6e, 0x64, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6d, 0x6f, 0x6e,
	0x64, 0x61, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x75, 0x65, 0x73, 0x64, 0x61, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x74, 0x75, 0x65, 0x73, 0x64, 0x61, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x77, 0x65, 0x64, 0x6e, 0x65, 0x73, 0x64, 0x61, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x77, 0x65, 0x64, 0x6e, 0x65, 0x73, 0x64, 0x61, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x68, 0x75, 0x72, 0x73, 0x64, 0x61, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x74,
	0x68, 0x75, 0x72, 0x73, 0x64, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x72, 0x69, 0x64, 0x61,
	0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x66, 0x72, 0x69, 0x64, 0x61, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x61, 0x74, 0x75, 0x72, 0x64, 0x61, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x73, 0x61, 0x74, 0x75, 0x72, 0x64, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x75, 0x6e, 0x64, 0x61, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x75, 0x6e,
	0x64, 0x61, 0x79, 0x22, 0x93, 0x01, 0x0a, 0x0c, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e,
	0x44, 0x61, 0x74, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x65, 0x78,
	0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x16, 0x2e, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x45, 0x78, 0x63,
	0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x65, 0x78, 0x63, 0x65,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0xd2, 0x01, 0x0a, 0x0a, 0x53, 0x68,
	0x61, 0x70, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x70,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x44, 0x52, 0x07, 0x73, 0x68, 0x61, 0x70, 0x65, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0c, 0x73, 0x68, 0x61, 0x70, 0x65, 0x5f, 0x70, 0x74, 0x5f, 0x6c, 0x61, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x73, 0x68, 0x61, 0x70, 0x65, 0x50, 0x74, 0x4c, 0x61, 0x74,
	0x12, 0x20, 0x0a, 0x0c, 0x73, 0x68, 0x61, 0x70, 0x65, 0x5f, 0x70, 0x74, 0x5f, 0x6c, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x73, 0x68, 0x61, 0x70, 0x65, 0x50, 0x74, 0x4c,
	0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x68, 0x61, 0x70, 0x65, 0x5f, 0x70, 0x74, 0x5f, 0x73,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x73,
	0x68, 0x61, 0x70, 0x65, 0x50, 0x74, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x2e,
	0x0a, 0x13, 0x73, 0x68, 0x61, 0x70, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x5f, 0x74, 0x72, 0x61,
	0x76, 0x65, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x73, 0x68, 0x61,
	0x70, 0x65, 0x44, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x65, 0x64, 0x22, 0x50,
	0x0a, 0x05, 0x53, 0x68, 0x61, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x70, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x44, 0x52, 0x07, 0x73, 0x68, 0x61, 0x70, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x05, 0x73, 0x68, 0x61, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x4c,
	0x69, 0x6e, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x73, 0x68, 0x61, 0x70, 0x65,
	0x22, 0x2b, 0x0a, 0x05, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6c, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6c,
	0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x22, 0x46, 0x0a,
	0x0a, 0x4c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x72, 0x69, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x72,
	0x69, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x01, 0x52, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x73, 0x2a, 0x5a, 0x0a, 0x10, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x63, 0x68,
	0x61, 0x69, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x15, 0x0a, 0x11, 0x57, 0x68, 0x65,
	0x65, 0x6c, 0x63, 0x68, 0x61, 0x69, 0x72, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00,
	0x12, 0x15, 0x0a, 0x11, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x63, 0x68, 0x61, 0x69, 0x72, 0x41, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x64, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x57, 0x68, 0x65, 0x65, 0x6c,
	0x63, 0x68, 0x61, 0x69, 0x72, 0x44, 0x69, 0x73, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x10,
	0x02, 0x2a, 0x42, 0x0a, 0x0a, 0x42, 0x69, 0x6b, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x0f, 0x0a, 0x0b, 0x42, 0x69, 0x6b, 0x65, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00,
	0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x69, 0x6b, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x10,
	0x01, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x69, 0x6b, 0x65, 0x44, 0x69, 0x73, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x64, 0x10, 0x02, 0x2a, 0x5b, 0x0a, 0x0b, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x0c, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x55, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x44,
	0x69, 0x73, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x42,
	0x6f, 0x61, 0x72, 0x64, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x10, 0x02, 0x12, 0x13, 0x0a,
	0x0f, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x10, 0x03, 0x2a, 0x64, 0x0a, 0x0c, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x74,
	0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x69, 0x63, 0x6b,
	0x75, 0x70, 0x44, 0x69, 0x73, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x10, 0x01, 0x12, 0x13,
	0x0a, 0x0f, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x4d, 0x75, 0x73, 0x74, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x41, 0x73, 0x6b,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x10, 0x03, 0x2a, 0x7b, 0x0a, 0x0c, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x10, 0x00, 0x12, 0x13,
	0x0a, 0x0f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x41,
	0x72, 0x65, 0x61, 0x10, 0x04, 0x2a, 0xcc, 0x01, 0x0a, 0x09, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x72,
	0x61, 0x6d, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x53,
	0x75, 0x62, 0x77, 0x61, 0x79, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x52, 0x61, 0x69, 0x6c, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x42, 0x75, 0x73, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x46, 0x65, 0x72, 0x72, 0x79, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x6c, 0x65, 0x63, 0x61, 0x72, 0x10, 0x05, 0x12,
	0x12, 0x0a, 0x0e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x47, 0x6f, 0x6e, 0x64, 0x6f, 0x6c,
	0x61, 0x10, 0x06, 0x12, 0x14, 0x0a, 0x10, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x46, 0x75,
	0x6e, 0x69, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x10, 0x07, 0x12, 0x14, 0x0a, 0x10, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x54, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x62, 0x75, 0x73, 0x10, 0x0b, 0x12,
	0x13, 0x0a, 0x0f, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x6f, 0x6e, 0x6f, 0x72, 0x61,
	0x69, 0x6c, 0x10, 0x0c, 0x2a, 0x38, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75,
	0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0x01, 0x2a, 0x27,
	0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x0f, 0x0a, 0x0b, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x78, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05,
	0x45, 0x78, 0x61, 0x63, 0x74, 0x10, 0x01, 0x2a, 0x54, 0x0a, 0x15, 0x43, 0x61, 0x6c, 0x65, 0x6e,
	0x64, 0x61, 0x72, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x13, 0x0a, 0x0f, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x55, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61,
	0x72, 0x41, 0x64, 0x64, 0x65, 0x64, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x61, 0x6c, 0x65,
	0x6e, 0x64, 0x61, 0x72, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x10, 0x02, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gtfs_proto_rawDescOnce sync.Once
	file_gtfs_proto_rawDescData = file_gtfs_proto_rawDesc
)

func file_gtfs_proto_rawDescGZIP() []byte {
	file_gtfs_proto_rawDescOnce.Do(func() {
		file_gtfs_proto_rawDescData = protoimpl.X.CompressGZIP(file_gtfs_proto_rawDescData)
	})
	return file_gtfs_proto_rawDescData
}

var file_gtfs_proto_enumTypes = make([]protoimpl.EnumInfo, 9)
var file_gtfs_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_gtfs_proto_goTypes = []any{
	(WheelchairAccess)(0),      // 0: WheelchairAccess
	(BikeAccess)(0),            // 1: BikeAccess
	(BoardAccess)(0),           // 2: BoardAccess
	(PickupAccess)(0),          // 3: PickupAccess
	(LocationType)(0),          // 4: LocationType
	(RouteType)(0),             // 5: RouteType
	(Direction)(0),             // 6: Direction
	(Timepoint)(0),             // 7: Timepoint
	(CalendarExceptionType)(0), // 8: CalendarExceptionType
	(*Date)(nil),               // 9: Date
	(*Time)(nil),               // 10: Time
	(*Seconds)(nil),            // 11: Seconds
	(*EntityID)(nil),           // 12: EntityID
	(*Timezone)(nil),           // 13: Timezone
	(*Reference)(nil),          // 14: Reference
	(*Url)(nil),                // 15: Url
	(*Color)(nil),              // 16: Color
	(*FeedEntity)(nil),         // 17: FeedEntity
	(*Agency)(nil),             // 18: Agency
	(*Stop)(nil),               // 19: Stop
	(*Route)(nil),              // 20: Route
	(*Trip)(nil),               // 21: Trip
	(*StopTime)(nil),           // 22: StopTime
	(*Service)(nil),            // 23: Service
	(*Calendar)(nil),           // 24: Calendar
	(*CalendarDate)(nil),       // 25: CalendarDate
	(*ShapePoint)(nil),         // 26: ShapePoint
	(*Shape)(nil),              // 27: Shape
	(*Point)(nil),              // 28: Point
	(*LineString)(nil),         // 29: LineString
}
var file_gtfs_proto_depIdxs = []int32{
	18, // 0: FeedEntity.agency:type_name -> Agency
	19, // 1: FeedEntity.stop:type_name -> Stop
	20, // 2: FeedEntity.route:type_name -> Route
	21, // 3: FeedEntity.trip:type_name -> Trip
	22, // 4: FeedEntity.stop_time:type_name -> StopTime
	27, // 5: FeedEntity.shape:type_name -> Shape
	23, // 6: FeedEntity.service:type_name -> Service
	12, // 7: Agency.agency_id:type_name -> EntityID
	13, // 8: Agency.agency_timezone:type_name -> Timezone
	15, // 9: Agency.agency_fare_url:type_name -> Url
	12, // 10: Stop.stop_id:type_name -> EntityID
	15, // 11: Stop.stop_url:type_name -> Url
	4,  // 12: Stop.location_type:type_name -> LocationType
	14, // 13: Stop.parent_station:type_name -> Reference
	13, // 14: Stop.stop_timezone:type_name -> Timezone
	0,  // 15: Stop.wheelchair_boarding:type_name -> WheelchairAccess
	14, // 16: Stop.level_id:type_name -> Reference
	12, // 17: Route.route_id:type_name -> EntityID
	14, // 18: Route.agency_id:type_name -> Reference
	5,  // 19: Route.route_type:type_name -> RouteType
	15, // 20: Route.route_url:type_name -> Url
	16, // 21: Route.route_color:type_name -> Color
	16, // 22: Route.route_text_color:type_name -> Color
	3,  // 23: Route.continuous_pickup:type_name -> PickupAccess
	3,  // 24: Route.continuous_drop_off:type_name -> PickupAccess
	14, // 25: Trip.route_id:type_name -> Reference
	14, // 26: Trip.service_id:type_name -> Reference
	12, // 27: Trip.trip_id:type_name -> EntityID
	6,  // 28: Trip.direction_id:type_name -> Direction
	14, // 29: Trip.shape_id:type_name -> Reference
	0,  // 30: Trip.wheelchair_accessible:type_name -> WheelchairAccess
	1,  // 31: Trip.bikes_allowed:type_name -> BikeAccess
	14, // 32: StopTime.trip_id:type_name -> Reference
	11, // 33: StopTime.arrival_time:type_name -> Seconds
	11, // 34: StopTime.departure_time:type_name -> Seconds
	14, // 35: StopTime.stop_id:type_name -> Reference
	3,  // 36: StopTime.continuous_pickup:type_name -> PickupAccess
	3,  // 37: StopTime.continuous_drop_off:type_name -> PickupAccess
	7,  // 38: StopTime.timepoint:type_name -> Timepoint
	12, // 39: Service.service_id:type_name -> EntityID
	9,  // 40: Service.start_date:type_name -> Date
	9,  // 41: Service.end_date:type_name -> Date
	9,  // 42: Service.added:type_name -> Date
	9,  // 43: Service.removed:type_name -> Date
	12, // 44: Calendar.service_id:type_name -> EntityID
	9,  // 45: Calendar.start_date:type_name -> Date
	9,  // 46: Calendar.end_date:type_name -> Date
	14, // 47: CalendarDate.service_id:type_name -> Reference
	9,  // 48: CalendarDate.date:type_name -> Date
	8,  // 49: CalendarDate.exception_type:type_name -> CalendarExceptionType
	12, // 50: ShapePoint.shape_id:type_name -> EntityID
	12, // 51: Shape.shape_id:type_name -> EntityID
	29, // 52: Shape.shape:type_name -> LineString
	53, // [53:53] is the sub-list for method output_type
	53, // [53:53] is the sub-list for method input_type
	53, // [53:53] is the sub-list for extension type_name
	53, // [53:53] is the sub-list for extension extendee
	0,  // [0:53] is the sub-list for field type_name
}

func init() { file_gtfs_proto_init() }
func file_gtfs_proto_init() {
	if File_gtfs_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gtfs_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Date); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gtfs_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Time); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gtfs_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Seconds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gtfs_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*EntityID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gtfs_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Timezone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gtfs_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Reference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gtfs_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*Url); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gtfs_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*Color); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gtfs_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*FeedEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gtfs_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*Agency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gtfs_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*Stop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gtfs_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*Route); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gtfs_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*Trip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gtfs_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*StopTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gtfs_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gtfs_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*Calendar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gtfs_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*CalendarDate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gtfs_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*ShapePoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gtfs_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*Shape); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gtfs_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*Point); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gtfs_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*LineString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gtfs_proto_rawDesc,
			NumEnums:      9,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gtfs_proto_goTypes,
		DependencyIndexes: file_gtfs_proto_depIdxs,
		EnumInfos:         file_gtfs_proto_enumTypes,
		MessageInfos:      file_gtfs_proto_msgTypes,
	}.Build()
	File_gtfs_proto = out.File
	file_gtfs_proto_rawDesc = nil
	file_gtfs_proto_goTypes = nil
	file_gtfs_proto_depIdxs = nil
}
