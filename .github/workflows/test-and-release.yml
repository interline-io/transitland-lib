name: "Test & Release"
on:
  push:
    branches:
      - '*'
  release:
    types:
      - created
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-latest]
    steps:
    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go
    - name: Checkout
      uses: actions/checkout@v1
    - name: Run tests
      run: go test -coverprofile c.out
    - name: Produce coverage report
      run: go tool cover -html=c.out -o coverage.html
    - name: Save coverage report as artifact
      uses: actions/upload-artifact@master
      with:
        name: coverage
        path: coverage.html
  build-linux:
    if: ${{ github.event_name == 'release' }}
    needs: test
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
      - name: Build on Linux
        working-directory: ${{ github.workspace }}/cmd/transitland
        run: CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build
      - name: Store Linux binary
        uses: actions/upload-artifact@v1
        with:
          name: transitland-linux
          path: ${{ github.workspace }}/cmd/transitland/transitland
  build-macos:
    if: ${{ github.event_name == 'release' }}
    needs: test
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
      - name: Build on macOS
        working-directory: ${{ github.workspace }}/cmd/transitland
        run: CGO_ENABLED=1 GOOS=darwin GOARCH=amd64 go build
      # TODO: sign the macOS binary, perhaps using https://github.com/mitchellh/gon
      - name: Store macOS binary
        uses: actions/upload-artifact@v1
        with:
          name: transitland-macos
          path: ${{ github.workspace }}/cmd/transitland/transitland
  release:
    if: ${{ github.event_name == 'release' }}
    needs: [build-linux, build-macos]
    runs-on: ubuntu-18.04
    steps:
      - name: Download Linux binary
        uses: actions/download-artifact@v1
        with:
          name: transitland-linux
      - name: Attach Linux binary to GitHub release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ github.workspace }}/transitland-linux/transitland
          asset_name: transitland-linux
          asset_label: Linux AMD-64 binary
          asset_content_type: application/binary
      - name: Download macOS binary
        uses: actions/download-artifact@v1
        with:
          name: transitland-macos
      - name: Attach macOS binary to GitHub release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ github.workspace }}/transitland-macos/transitland
          asset_name: transitland-macos
          asset_label: macOS AMD-64 binary
          asset_content_type: application/binary
